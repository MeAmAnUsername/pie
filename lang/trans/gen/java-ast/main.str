module gen/java-ast/main

imports

  nabl2/api

  gen/util
  gen/java-ast/ast-util
  gen/java-ast/func_def

  signatures/pie-sig
  signatures/java/packages/-
  signatures/java/names/-
  signatures/java/classes/-
  signatures/java/lexical/-
  signatures/java/types/-
  signatures/java/interfaces/-
  signatures/java/statements/-

  pp

  libspoofax/stratego/debug

rules

  generate-java-file-ast:
    (pieAst, _, _, file, _) -> (filename, result)
    with
      filename := <guarantee-extension(|"java")> file
    ; pieFile  := <base-filename;remove-extension> file
    ; javaAst  := <p2j-ast(|pieFile)> pieAst
    ; <debug(|"Successfully transpiled file to Java: ")> file
    ; result   := <p2j-ast-to-filestring(|pieFile)> javaAst
    ; <debug(|"Successfully transformed Java AST to string: ")> file

rules

  p2j-ast-to-filestring(|pieFile):
    ast ->
$[// This file was generated from Pie source file [pieFile].pie.
[<pp-java-string> ast]
// last cache update: 2020-01-09 13:52
]

  p2j-ast(|pieFile):
    Program(Module(mod), Package(package), imps, defs) -> result
    with
    {| AstAnalysis, ModuleBindings, JavaImports:
      <pie-set-ast-analysis> defs
    ; <add-import> "mb.pie.taskdefs.guice.TaskDefsModule"
    ; classes  := <filter(p2j-ast-def)> defs
    ; bindings := <bagof-ModuleBindings>
    ; imports  := <uniq> <bagof-JavaImports>
    |}
    with
      result := CompilationUnit(
        Some(PackageDeclaration(
          []
        , <map(p2j-ast-wrap-string-with-id)> package
        ))
      , imports
      , [ ClassDeclaration(
            [Public()]
          , Id(<pie-sanitize-class-id> pieFile)
          , None()
          , None()
          , None()
          , <concat> [
              classes
            , [ ClassDeclaration(
                  [Public(), Static()]
                , Id($[TaskDefsModule_[<pie-sanitize-class-id> pieFile]])
                , None()
                , Some(SuperClass(ClassType([], Id("TaskDefsModule"), None())))
                , None()
                , [ MethodDecl(
                      [MarkerAnno(TypeName(Id("Override"))), Protected()]
                    , MethodHeader(Void(), Id("bindTaskDefs"), NoParams(), [], None())
                    , Block(bindings)
                    )
                  ]
                )
              ]
            ]
          )
        ]
      )
      // Note: meaning of this AST:
      //   package [package];
      //
      //   [imports]
      //
      //   class [<pie-sanitize-class-id> pieFile] {
      //     [classes]
      //
      //     public static class TaskDefsModule_[<pie-sanitize-class-id> pieFile] extends TaskDefsModule {
      //       @Override
      //       protected void bindTaskDefs() {
      //         [bindings]
      //       }
      //     }
      //   }
