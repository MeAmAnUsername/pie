module pp/java/expressions/ArrayCreation-pp

imports
  libstratego-gpp
  libspoofax/sdf/pp
  libspoofax/term/origin
  libspoofax/term/annotation
  libstratego-sglr
  libstratego-sglr
  signatures/java/expressions/ArrayCreation-sig


imports
  signatures/java/types/ReferenceTypes-sig
  signatures/java/types/PrimitiveTypes-sig
  signatures/java/interfaces/Annotations-sig
  signatures/java/arrays/ArrayInitializers-sig


imports
  pp/java/types/ReferenceTypes-pp
  pp/java/types/PrimitiveTypes-pp
  pp/java/interfaces/Annotations-pp
  pp/java/arrays/ArrayInitializers-pp


strategies
  prettyprint-example =
    prettyprint-metaborg-java

  prettyprint-metaborg-java =
    fail

  prettyprint-metaborg-java(|sort) =
    fail


strategies
  prettyprint-SDF-start-symbols =
    prettyprint-metaborg-java-start-symbols

  prettyprint-metaborg-java-start-symbols =
    fail


strategies
  prettyprint-metaborg-java =
    prettyprint-metaborg-java-Expression

  prettyprint-metaborg-java =
    prettyprint-metaborg-java-ArrayCreationExpression

  prettyprint-metaborg-java =
    prettyprint-metaborg-java-ArrayBaseType

  prettyprint-metaborg-java =
    prettyprint-metaborg-java-DimExpr

  prettyprint-metaborg-java(|sort):
    t -> <prettyprint-metaborg-java-Expression>
    where <?"Expression"> sort

  prettyprint-metaborg-java(|sort):
    t -> <prettyprint-metaborg-java-ArrayCreationExpression>
    where <?"ArrayCreationExpression"> sort

  prettyprint-metaborg-java(|sort):
    t -> <prettyprint-metaborg-java-ArrayBaseType>
    where <?"ArrayBaseType"> sort

  prettyprint-metaborg-java(|sort):
    t -> <prettyprint-metaborg-java-DimExpr>
    where <?"DimExpr"> sort

  prettyprint-metaborg-java-Expression :
    t1__ -> [ H(
                [SOpt(HS(), "0")]
              , t1__'
              )
            ]
    where not(is-metaborg-java-Expression)
    where t1__' := <clean-layout-empty-symbols(
                    | ""
                    , FALSE()
                    , FALSE()
                    )
                    ; flatten-list> [ <check-nonterminal-isEmpty ; id
                                       <+ pp-one-Z(prettyprint-metaborg-java-ArrayCreationExpression)
                                       <+ pp-one-Z(prettyprint-completion-aux)> t1__
                                    ]

  prettyprint-metaborg-java-ArrayCreationExpression :
    NewArray(t1__, t2__, t3__) -> [ H(
                                      [SOpt(HS(), "0")]
                                    , t1__'
                                    )
                                  ]
    with t1__' := <clean-layout-empty-symbols(
                   | ""
                   , FALSE()
                   , FALSE()
                   )
                   ; flatten-list> [ S("new")
                                   , S(" ")
                                   , <check-nonterminal-isEmpty ; id
                                      <+ pp-one-Z(prettyprint-metaborg-java-ArrayBaseType)
                                      <+ pp-one-Z(prettyprint-completion-aux)> t1__
                                   , <check-nonterminal-isEmpty ; id
                                      <+ pp-H-list(prettyprint-metaborg-java-DimExpr|" ")
                                      <+ pp-one-Z(prettyprint-completion-aux)> t2__
                                   , <check-nonterminal-isEmpty ; id
                                      <+ pp-one-Z(prettyprint-metaborg-java-AnnotatedDimsEmpty)
                                      <+ pp-one-Z(prettyprint-completion-aux)> t3__
                                   ]

  is-metaborg-java-ArrayCreationExpression =
    ?NewArray(_, _, _)

  metaborg-java-get-indent :
    ( t@NewArray(t1__, t2__, t3__)
    , index
    ) -> indent
    where sort := <ia-get-sort> t
          ; <?"ArrayCreationExpression"> sort
    with switch !index
           case ?1 :
             indent := ""
           case ?2 :
             indent := ""
           case ?3 :
             indent := ""
           otherwise :
             indent := ""
         end

  metaborg-java-get-separator :
    ( t@NewArray(t1__, t2__, t3__)
    , index
    ) -> separator
    where sort := <ia-get-sort> t
          ; <?"ArrayCreationExpression"> sort
    with switch !index
           case ?1 :
             separator := ""
           case ?2 :
             separator := " "
           case ?3 :
             separator := ""
           otherwise :
             separator := ""
         end

  metaborg-java-get-leading-ws :
    ( t@NewArray(t1__, t2__, t3__)
    , index
    ) -> ws
    where sort := <ia-get-sort> t
          ; <?"ArrayCreationExpression"> sort
    with switch !index
           case ?1 :
             ws := " "
           case ?2 :
             ws := ""
           case ?3 :
             ws := ""
           otherwise :
             ws := ""
         end

  prettyprint-metaborg-java-ArrayCreationExpression :
    NewArrayInit(t1__, t2__, t3__) -> [ H(
                                          [SOpt(HS(), "0")]
                                        , t1__'
                                        )
                                      ]
    with t1__' := <clean-layout-empty-symbols(
                   | ""
                   , FALSE()
                   , FALSE()
                   )
                   ; flatten-list> [ S("new")
                                   , S(" ")
                                   , <check-nonterminal-isEmpty ; id
                                      <+ pp-one-Z(prettyprint-metaborg-java-ArrayBaseType)
                                      <+ pp-one-Z(prettyprint-completion-aux)> t1__
                                   , <check-nonterminal-isEmpty ; id
                                      <+ pp-one-Z(prettyprint-metaborg-java-AnnotatedDims)
                                      <+ pp-one-Z(prettyprint-completion-aux)> t2__
                                   , <check-nonterminal-isEmpty ; id
                                      <+ pp-one-Z(prettyprint-metaborg-java-ArrayInitializer)
                                      <+ pp-one-Z(prettyprint-completion-aux)> t3__
                                   ]

  is-metaborg-java-ArrayCreationExpression =
    ?NewArrayInit(_, _, _)

  metaborg-java-get-indent :
    ( t@NewArrayInit(t1__, t2__, t3__)
    , index
    ) -> indent
    where sort := <ia-get-sort> t
          ; <?"ArrayCreationExpression"> sort
    with switch !index
           case ?1 :
             indent := ""
           case ?2 :
             indent := ""
           case ?3 :
             indent := ""
           otherwise :
             indent := ""
         end

  metaborg-java-get-separator :
    ( t@NewArrayInit(t1__, t2__, t3__)
    , index
    ) -> separator
    where sort := <ia-get-sort> t
          ; <?"ArrayCreationExpression"> sort
    with switch !index
           case ?1 :
             separator := ""
           case ?2 :
             separator := ""
           case ?3 :
             separator := ""
           otherwise :
             separator := ""
         end

  metaborg-java-get-leading-ws :
    ( t@NewArrayInit(t1__, t2__, t3__)
    , index
    ) -> ws
    where sort := <ia-get-sort> t
          ; <?"ArrayCreationExpression"> sort
    with switch !index
           case ?1 :
             ws := " "
           case ?2 :
             ws := ""
           case ?3 :
             ws := ""
           otherwise :
             ws := ""
         end

  prettyprint-metaborg-java-ArrayBaseType :
    t1__ -> [ H(
                [SOpt(HS(), "0")]
              , t1__'
              )
            ]
    where not(is-metaborg-java-ArrayBaseType)
    where t1__' := <clean-layout-empty-symbols(
                    | ""
                    , FALSE()
                    , FALSE()
                    )
                    ; flatten-list> [ <check-nonterminal-isEmpty ; id
                                       <+ pp-one-Z(prettyprint-metaborg-java-ClassType)
                                       <+ pp-one-Z(prettyprint-completion-aux)> t1__
                                    ]

  prettyprint-metaborg-java-ArrayBaseType :
    t1__ -> [ H(
                [SOpt(HS(), "0")]
              , t1__'
              )
            ]
    where not(is-metaborg-java-ArrayBaseType)
    where t1__' := <clean-layout-empty-symbols(
                    | ""
                    , FALSE()
                    , FALSE()
                    )
                    ; flatten-list> [ <check-nonterminal-isEmpty ; id
                                       <+ pp-one-Z(prettyprint-metaborg-java-PrimitiveType)
                                       <+ pp-one-Z(prettyprint-completion-aux)> t1__
                                    ]

  prettyprint-metaborg-java-DimExpr :
    Dim(t1__, t2__) -> [ H(
                           [SOpt(HS(), "0")]
                         , t1__'
                         )
                       ]
    with t1__' := <clean-layout-empty-symbols(
                   | ""
                   , FALSE()
                   , FALSE()
                   )
                   ; flatten-list> [ <check-nonterminal-isEmpty ; id
                                      <+ pp-H-list(prettyprint-metaborg-java-Annotation|" ")
                                      <+ pp-one-Z(prettyprint-completion-aux)> t1__
                                   , S(" ")
                                   , S("[")
                                   , <check-nonterminal-isEmpty ; id
                                      <+ pp-one-Z(prettyprint-metaborg-java-Expression)
                                      <+ pp-one-Z(prettyprint-completion-aux)> t2__
                                   , S("]")
                                   ]

  is-metaborg-java-DimExpr =
    ?Dim(_, _)

  metaborg-java-get-indent :
    (t@Dim(t1__, t2__), index) -> indent
    where sort := <ia-get-sort> t
          ; <?"DimExpr"> sort
    with switch !index
           case ?1 :
             indent := ""
           case ?2 :
             indent := ""
           otherwise :
             indent := ""
         end

  metaborg-java-get-separator :
    (t@Dim(t1__, t2__), index) -> separator
    where sort := <ia-get-sort> t
          ; <?"DimExpr"> sort
    with switch !index
           case ?1 :
             separator := " "
           case ?2 :
             separator := ""
           otherwise :
             separator := ""
         end

  metaborg-java-get-leading-ws :
    (t@Dim(t1__, t2__), index) -> ws
    where sort := <ia-get-sort> t
          ; <?"DimExpr"> sort
    with switch !index
           case ?1 :
             ws := ""
           case ?2 :
             ws := ""
           otherwise :
             ws := ""
         end

  is-metaborg-java-Expression =
    fail

  is-metaborg-java-ArrayCreationExpression =
    fail

  is-metaborg-java-ArrayBaseType =
    fail

  is-metaborg-java-DimExpr =
    fail

  prettyprint-metaborg-java-Expression :
    amb([h|hs]) -> <prettyprint-metaborg-java-Expression> h

  prettyprint-metaborg-java-ArrayCreationExpression :
    amb([h|hs]) -> <prettyprint-metaborg-java-ArrayCreationExpression> h

  prettyprint-metaborg-java-ArrayBaseType :
    amb([h|hs]) -> <prettyprint-metaborg-java-ArrayBaseType> h

  prettyprint-metaborg-java-DimExpr :
    amb([h|hs]) -> <prettyprint-metaborg-java-DimExpr> h

  prettyprint-metaborg-java-AnnotatedDimsEmpty :
    AnnotatedDimsEmpty-Plhdr() -> [ H(
                                      [SOpt(HS(), "0")]
                                    , [S("$AnnotatedDimsEmpty")]
                                    )
                                  ]

  is-metaborg-java-AnnotatedDimsEmpty =
    ?AnnotatedDimsEmpty-Plhdr()

  prettyprint-metaborg-java-ArrayCreationExpression :
    ArrayCreationExpression-Plhdr() -> [ H(
                                           [SOpt(HS(), "0")]
                                         , [S("$ArrayCreationExpression")]
                                         )
                                       ]

  is-metaborg-java-ArrayCreationExpression =
    ?ArrayCreationExpression-Plhdr()

  prettyprint-metaborg-java-AnnotatedDims :
    AnnotatedDims-Plhdr() -> [ H(
                                 [SOpt(HS(), "0")]
                               , [S("$AnnotatedDims")]
                               )
                             ]

  is-metaborg-java-AnnotatedDims =
    ?AnnotatedDims-Plhdr()

  prettyprint-metaborg-java-ArrayInitializer :
    ArrayInitializer-Plhdr() -> [ H(
                                    [SOpt(HS(), "0")]
                                  , [S("$ArrayInitializer")]
                                  )
                                ]

  is-metaborg-java-ArrayInitializer =
    ?ArrayInitializer-Plhdr()

  prettyprint-metaborg-java-ClassType :
    ClassType-Plhdr() -> [ H(
                             [SOpt(HS(), "0")]
                           , [S("$ClassType")]
                           )
                         ]

  is-metaborg-java-ClassType =
    ?ClassType-Plhdr()

  prettyprint-metaborg-java-ArrayBaseType :
    ArrayBaseType-Plhdr() -> [ H(
                                 [SOpt(HS(), "0")]
                               , [S("$ArrayBaseType")]
                               )
                             ]

  is-metaborg-java-ArrayBaseType =
    ?ArrayBaseType-Plhdr()

  prettyprint-metaborg-java-PrimitiveType :
    PrimitiveType-Plhdr() -> [ H(
                                 [SOpt(HS(), "0")]
                               , [S("$PrimitiveType")]
                               )
                             ]

  is-metaborg-java-PrimitiveType =
    ?PrimitiveType-Plhdr()

  prettyprint-metaborg-java-DimExpr :
    DimExpr-Plhdr() -> [ H(
                           [SOpt(HS(), "0")]
                         , [S("$DimExpr")]
                         )
                       ]

  is-metaborg-java-DimExpr =
    ?DimExpr-Plhdr()

  prettyprint-metaborg-java-Annotation :
    Annotation-Plhdr() -> [ H(
                              [SOpt(HS(), "0")]
                            , [S("$Annotation")]
                            )
                          ]

  is-metaborg-java-Annotation =
    ?Annotation-Plhdr()

  prettyprint-metaborg-java-Expression :
    Expression-Plhdr() -> [ H(
                              [SOpt(HS(), "0")]
                            , [S("$Expression")]
                            )
                          ]

  is-metaborg-java-Expression =
    ?Expression-Plhdr()

  prettyprint-metaborg-java-AnnotatedDimsEmpty :
    AnnotatedDimsEmpty-Plhdr(_) -> [ H(
                                       [SOpt(HS(), "0")]
                                     , [S("$AnnotatedDimsEmpty")]
                                     )
                                   ]

  is-metaborg-java-AnnotatedDimsEmpty =
    ?AnnotatedDimsEmpty-Plhdr(_)

  prettyprint-metaborg-java-ArrayCreationExpression :
    ArrayCreationExpression-Plhdr(_) -> [ H(
                                            [SOpt(HS(), "0")]
                                          , [S("$ArrayCreationExpression")]
                                          )
                                        ]

  is-metaborg-java-ArrayCreationExpression =
    ?ArrayCreationExpression-Plhdr(_)

  prettyprint-metaborg-java-AnnotatedDims :
    AnnotatedDims-Plhdr(_) -> [ H(
                                  [SOpt(HS(), "0")]
                                , [S("$AnnotatedDims")]
                                )
                              ]

  is-metaborg-java-AnnotatedDims =
    ?AnnotatedDims-Plhdr(_)

  prettyprint-metaborg-java-ArrayInitializer :
    ArrayInitializer-Plhdr(_) -> [ H(
                                     [SOpt(HS(), "0")]
                                   , [S("$ArrayInitializer")]
                                   )
                                 ]

  is-metaborg-java-ArrayInitializer =
    ?ArrayInitializer-Plhdr(_)

  prettyprint-metaborg-java-ClassType :
    ClassType-Plhdr(_) -> [ H(
                              [SOpt(HS(), "0")]
                            , [S("$ClassType")]
                            )
                          ]

  is-metaborg-java-ClassType =
    ?ClassType-Plhdr(_)

  prettyprint-metaborg-java-ArrayBaseType :
    ArrayBaseType-Plhdr(_) -> [ H(
                                  [SOpt(HS(), "0")]
                                , [S("$ArrayBaseType")]
                                )
                              ]

  is-metaborg-java-ArrayBaseType =
    ?ArrayBaseType-Plhdr(_)

  prettyprint-metaborg-java-PrimitiveType :
    PrimitiveType-Plhdr(_) -> [ H(
                                  [SOpt(HS(), "0")]
                                , [S("$PrimitiveType")]
                                )
                              ]

  is-metaborg-java-PrimitiveType =
    ?PrimitiveType-Plhdr(_)

  prettyprint-metaborg-java-DimExpr :
    DimExpr-Plhdr(_) -> [ H(
                            [SOpt(HS(), "0")]
                          , [S("$DimExpr")]
                          )
                        ]

  is-metaborg-java-DimExpr =
    ?DimExpr-Plhdr(_)

  prettyprint-metaborg-java-Annotation :
    Annotation-Plhdr(_) -> [ H(
                               [SOpt(HS(), "0")]
                             , [S("$Annotation")]
                             )
                           ]

  is-metaborg-java-Annotation =
    ?Annotation-Plhdr(_)

  prettyprint-metaborg-java-Expression :
    Expression-Plhdr(_) -> [ H(
                               [SOpt(HS(), "0")]
                             , [S("$Expression")]
                             )
                           ]

  is-metaborg-java-Expression =
    ?Expression-Plhdr(_)

  prettyprint-metaborg-java-Annotation :
    Annotation-Opt-Plhdr() -> [ H(
                                  []
                                , [S("")]
                                )
                              ]

  is-metaborg-java-Annotation =
    ?Annotation-Opt-Plhdr()