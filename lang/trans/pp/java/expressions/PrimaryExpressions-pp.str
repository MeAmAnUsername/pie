module pp/java/expressions/PrimaryExpressions-pp

imports
  libstratego-gpp
  libspoofax/sdf/pp
  libspoofax/term/origin
  libspoofax/term/annotation
  libstratego-sglr
  libstratego-sglr
  signatures/java/expressions/PrimaryExpressions-sig


imports
  signatures/java/literals/Main-sig
  signatures/java/names/Names-sig
  signatures/java/types/PrimitiveTypes-sig


imports
  pp/java/literals/Main-pp
  pp/java/names/Names-pp
  pp/java/types/PrimitiveTypes-pp


strategies
  prettyprint-example =
    prettyprint-metaborg-java

  prettyprint-metaborg-java =
    fail

  prettyprint-metaborg-java(|sort) =
    fail


strategies
  prettyprint-SDF-start-symbols =
    prettyprint-metaborg-java-start-symbols

  prettyprint-metaborg-java-start-symbols =
    fail


strategies
  prettyprint-metaborg-java =
    prettyprint-metaborg-java-Expression

  prettyprint-metaborg-java =
    prettyprint-metaborg-java-ClassLiteral

  prettyprint-metaborg-java =
    prettyprint-metaborg-java-Dims

  prettyprint-metaborg-java(|sort):
    t -> <prettyprint-metaborg-java-Expression>
    where <?"Expression"> sort

  prettyprint-metaborg-java(|sort):
    t -> <prettyprint-metaborg-java-ClassLiteral>
    where <?"ClassLiteral"> sort

  prettyprint-metaborg-java(|sort):
    t -> <prettyprint-metaborg-java-Dims>
    where <?"Dims"> sort

  prettyprint-metaborg-java-Expression :
    t1__ -> [ H(
                [SOpt(HS(), "0")]
              , t1__'
              )
            ]
    where not(is-metaborg-java-Expression)
    where t1__' := <clean-layout-empty-symbols(
                    | ""
                    , FALSE()
                    , FALSE()
                    )
                    ; flatten-list> [ <check-nonterminal-isEmpty ; id
                                       <+ pp-one-Z(prettyprint-metaborg-java-Literal)
                                       <+ pp-one-Z(prettyprint-completion-aux)> t1__
                                    ]

  prettyprint-metaborg-java-Expression :
    t1__ -> [ H(
                [SOpt(HS(), "0")]
              , t1__'
              )
            ]
    where not(is-metaborg-java-Expression)
    where t1__' := <clean-layout-empty-symbols(
                    | ""
                    , FALSE()
                    , FALSE()
                    )
                    ; flatten-list> [ <check-nonterminal-isEmpty ; id
                                       <+ pp-one-Z(prettyprint-metaborg-java-ClassLiteral)
                                       <+ pp-one-Z(prettyprint-completion-aux)> t1__
                                    ]

  prettyprint-metaborg-java-Expression :
    This() -> [ H(
                  [SOpt(HS(), "0")]
                , t1__'
                )
              ]
    with t1__' := <clean-layout-empty-symbols(
                   | ""
                   , FALSE()
                   , FALSE()
                   )
                   ; flatten-list> [S("this")]

  is-metaborg-java-Expression =
    ?This()

  metaborg-java-get-indent :
    (t@This(), index) -> indent
    where sort := <ia-get-sort> t
          ; <?"Expression"> sort
    with switch !index
           otherwise :
             indent := ""
         end

  metaborg-java-get-separator :
    (t@This(), index) -> separator
    where sort := <ia-get-sort> t
          ; <?"Expression"> sort
    with switch !index
           otherwise :
             separator := ""
         end

  metaborg-java-get-leading-ws :
    (t@This(), index) -> ws
    where sort := <ia-get-sort> t
          ; <?"Expression"> sort
    with switch !index
           otherwise :
             ws := ""
         end

  prettyprint-metaborg-java-Expression :
    QThis(t1__) -> [ H(
                       [SOpt(HS(), "0")]
                     , t1__'
                     )
                   ]
    with t1__' := <clean-layout-empty-symbols(
                   | ""
                   , FALSE()
                   , FALSE()
                   )
                   ; flatten-list> [ <check-nonterminal-isEmpty ; id
                                      <+ pp-one-Z(prettyprint-metaborg-java-TypeName)
                                      <+ pp-one-Z(prettyprint-completion-aux)> t1__
                                   , S(".this")
                                   ]

  is-metaborg-java-Expression =
    ?QThis(_)

  metaborg-java-get-indent :
    (t@QThis(t1__), index) -> indent
    where sort := <ia-get-sort> t
          ; <?"Expression"> sort
    with switch !index
           case ?1 :
             indent := ""
           otherwise :
             indent := ""
         end

  metaborg-java-get-separator :
    (t@QThis(t1__), index) -> separator
    where sort := <ia-get-sort> t
          ; <?"Expression"> sort
    with switch !index
           case ?1 :
             separator := ""
           otherwise :
             separator := ""
         end

  metaborg-java-get-leading-ws :
    (t@QThis(t1__), index) -> ws
    where sort := <ia-get-sort> t
          ; <?"Expression"> sort
    with switch !index
           case ?1 :
             ws := ""
           otherwise :
             ws := ""
         end

  prettyprint-metaborg-java-Expression :
    Parenthetical(t1__) -> [ H(
                               [SOpt(HS(), "0")]
                             , t1__'
                             )
                           ]
    with t1__' := <clean-layout-empty-symbols(
                   | ""
                   , FALSE()
                   , FALSE()
                   )
                   ; flatten-list> [ S("(")
                                   , <check-nonterminal-isEmpty ; id
                                      <+ pp-one-Z(prettyprint-metaborg-java-Expression)
                                      <+ pp-one-Z(prettyprint-completion-aux)> t1__
                                   , S(")")
                                   ]

  prettyprint-metaborg-java-ClassLiteral :
    TypeNameClassLiteral(t1__, t2__) -> [ H(
                                            [SOpt(HS(), "0")]
                                          , t1__'
                                          )
                                        ]
    with t1__' := <clean-layout-empty-symbols(
                   | ""
                   , FALSE()
                   , FALSE()
                   )
                   ; flatten-list> [ <check-nonterminal-isEmpty ; id
                                      <+ pp-one-Z(prettyprint-metaborg-java-TypeName)
                                      <+ pp-one-Z(prettyprint-completion-aux)> t1__
                                   , <check-nonterminal-isEmpty ; id
                                      <+ pp-H-list(prettyprint-metaborg-java-Dims)
                                      <+ pp-one-Z(prettyprint-completion-aux)> t2__
                                   , S(".class")
                                   ]

  is-metaborg-java-ClassLiteral =
    ?TypeNameClassLiteral(_, _)

  metaborg-java-get-indent :
    (t@TypeNameClassLiteral(t1__, t2__), index) -> indent
    where sort := <ia-get-sort> t
          ; <?"ClassLiteral"> sort
    with switch !index
           case ?1 :
             indent := ""
           case ?2 :
             indent := ""
           otherwise :
             indent := ""
         end

  metaborg-java-get-separator :
    (t@TypeNameClassLiteral(t1__, t2__), index) -> separator
    where sort := <ia-get-sort> t
          ; <?"ClassLiteral"> sort
    with switch !index
           case ?1 :
             separator := ""
           case ?2 :
             separator := ""
           otherwise :
             separator := ""
         end

  metaborg-java-get-leading-ws :
    (t@TypeNameClassLiteral(t1__, t2__), index) -> ws
    where sort := <ia-get-sort> t
          ; <?"ClassLiteral"> sort
    with switch !index
           case ?1 :
             ws := ""
           case ?2 :
             ws := ""
           otherwise :
             ws := ""
         end

  prettyprint-metaborg-java-ClassLiteral :
    NumericTypeClassLiteral(t1__, t2__) -> [ H(
                                               [SOpt(HS(), "0")]
                                             , t1__'
                                             )
                                           ]
    with t1__' := <clean-layout-empty-symbols(
                   | ""
                   , FALSE()
                   , FALSE()
                   )
                   ; flatten-list> [ <check-nonterminal-isEmpty ; id
                                      <+ pp-one-Z(prettyprint-metaborg-java-NumericType)
                                      <+ pp-one-Z(prettyprint-completion-aux)> t1__
                                   , <check-nonterminal-isEmpty ; id
                                      <+ pp-H-list(prettyprint-metaborg-java-Dims)
                                      <+ pp-one-Z(prettyprint-completion-aux)> t2__
                                   , S(".class")
                                   ]

  is-metaborg-java-ClassLiteral =
    ?NumericTypeClassLiteral(_, _)

  metaborg-java-get-indent :
    (t@NumericTypeClassLiteral(t1__, t2__), index) -> indent
    where sort := <ia-get-sort> t
          ; <?"ClassLiteral"> sort
    with switch !index
           case ?1 :
             indent := ""
           case ?2 :
             indent := ""
           otherwise :
             indent := ""
         end

  metaborg-java-get-separator :
    (t@NumericTypeClassLiteral(t1__, t2__), index) -> separator
    where sort := <ia-get-sort> t
          ; <?"ClassLiteral"> sort
    with switch !index
           case ?1 :
             separator := ""
           case ?2 :
             separator := ""
           otherwise :
             separator := ""
         end

  metaborg-java-get-leading-ws :
    (t@NumericTypeClassLiteral(t1__, t2__), index) -> ws
    where sort := <ia-get-sort> t
          ; <?"ClassLiteral"> sort
    with switch !index
           case ?1 :
             ws := ""
           case ?2 :
             ws := ""
           otherwise :
             ws := ""
         end

  prettyprint-metaborg-java-ClassLiteral :
    BooleanClassLiteral(t1__) -> [ H(
                                     [SOpt(HS(), "0")]
                                   , t1__'
                                   )
                                 ]
    with t1__' := <clean-layout-empty-symbols(
                   | ""
                   , FALSE()
                   , FALSE()
                   )
                   ; flatten-list> [ S("boolean")
                                   , <check-nonterminal-isEmpty ; id
                                      <+ pp-H-list(prettyprint-metaborg-java-Dims)
                                      <+ pp-one-Z(prettyprint-completion-aux)> t1__
                                   , S(".class")
                                   ]

  is-metaborg-java-ClassLiteral =
    ?BooleanClassLiteral(_)

  metaborg-java-get-indent :
    (t@BooleanClassLiteral(t1__), index) -> indent
    where sort := <ia-get-sort> t
          ; <?"ClassLiteral"> sort
    with switch !index
           case ?1 :
             indent := ""
           otherwise :
             indent := ""
         end

  metaborg-java-get-separator :
    (t@BooleanClassLiteral(t1__), index) -> separator
    where sort := <ia-get-sort> t
          ; <?"ClassLiteral"> sort
    with switch !index
           case ?1 :
             separator := ""
           otherwise :
             separator := ""
         end

  metaborg-java-get-leading-ws :
    (t@BooleanClassLiteral(t1__), index) -> ws
    where sort := <ia-get-sort> t
          ; <?"ClassLiteral"> sort
    with switch !index
           case ?1 :
             ws := ""
           otherwise :
             ws := ""
         end

  prettyprint-metaborg-java-ClassLiteral :
    VoidClassLiteral() -> [ H(
                              [SOpt(HS(), "0")]
                            , t1__'
                            )
                          ]
    with t1__' := <clean-layout-empty-symbols(
                   | ""
                   , FALSE()
                   , FALSE()
                   )
                   ; flatten-list> [S("void.class")]

  is-metaborg-java-ClassLiteral =
    ?VoidClassLiteral()

  metaborg-java-get-indent :
    (t@VoidClassLiteral(), index) -> indent
    where sort := <ia-get-sort> t
          ; <?"ClassLiteral"> sort
    with switch !index
           otherwise :
             indent := ""
         end

  metaborg-java-get-separator :
    (t@VoidClassLiteral(), index) -> separator
    where sort := <ia-get-sort> t
          ; <?"ClassLiteral"> sort
    with switch !index
           otherwise :
             separator := ""
         end

  metaborg-java-get-leading-ws :
    (t@VoidClassLiteral(), index) -> ws
    where sort := <ia-get-sort> t
          ; <?"ClassLiteral"> sort
    with switch !index
           otherwise :
             ws := ""
         end

  prettyprint-metaborg-java-Dims :
    Dimension() -> [ H(
                       [SOpt(HS(), "0")]
                     , t1__'
                     )
                   ]
    with t1__' := <clean-layout-empty-symbols(
                   | ""
                   , FALSE()
                   , FALSE()
                   )
                   ; flatten-list> [S("[]")]

  is-metaborg-java-Dims =
    ?Dimension()

  metaborg-java-get-indent :
    (t@Dimension(), index) -> indent
    where sort := <ia-get-sort> t
          ; <?"Dims"> sort
    with switch !index
           otherwise :
             indent := ""
         end

  metaborg-java-get-separator :
    (t@Dimension(), index) -> separator
    where sort := <ia-get-sort> t
          ; <?"Dims"> sort
    with switch !index
           otherwise :
             separator := ""
         end

  metaborg-java-get-leading-ws :
    (t@Dimension(), index) -> ws
    where sort := <ia-get-sort> t
          ; <?"Dims"> sort
    with switch !index
           otherwise :
             ws := ""
         end

  is-metaborg-java-Expression =
    fail

  is-metaborg-java-ClassLiteral =
    fail

  is-metaborg-java-Dims =
    fail

  prettyprint-metaborg-java-Expression :
    amb([h|hs]) -> <prettyprint-metaborg-java-Expression> h

  prettyprint-metaborg-java-ClassLiteral :
    amb([h|hs]) -> <prettyprint-metaborg-java-ClassLiteral> h

  prettyprint-metaborg-java-Dims :
    amb([h|hs]) -> <prettyprint-metaborg-java-Dims> h

  prettyprint-metaborg-java-Literal :
    Literal-Plhdr() -> [ H(
                           [SOpt(HS(), "0")]
                         , [S("$Literal")]
                         )
                       ]

  is-metaborg-java-Literal =
    ?Literal-Plhdr()

  prettyprint-metaborg-java-Expression :
    Expression-Plhdr() -> [ H(
                              [SOpt(HS(), "0")]
                            , [S("$Expression")]
                            )
                          ]

  is-metaborg-java-Expression =
    ?Expression-Plhdr()

  prettyprint-metaborg-java-TypeName :
    TypeName-Plhdr() -> [ H(
                            [SOpt(HS(), "0")]
                          , [S("$TypeName")]
                          )
                        ]

  is-metaborg-java-TypeName =
    ?TypeName-Plhdr()

  prettyprint-metaborg-java-NumericType :
    NumericType-Plhdr() -> [ H(
                               [SOpt(HS(), "0")]
                             , [S("$NumericType")]
                             )
                           ]

  is-metaborg-java-NumericType =
    ?NumericType-Plhdr()

  prettyprint-metaborg-java-ClassLiteral :
    ClassLiteral-Plhdr() -> [ H(
                                [SOpt(HS(), "0")]
                              , [S("$ClassLiteral")]
                              )
                            ]

  is-metaborg-java-ClassLiteral =
    ?ClassLiteral-Plhdr()

  prettyprint-metaborg-java-Dims :
    Dims-Plhdr() -> [ H(
                        [SOpt(HS(), "0")]
                      , [S("$Dims")]
                      )
                    ]

  is-metaborg-java-Dims =
    ?Dims-Plhdr()

  prettyprint-metaborg-java-Literal :
    Literal-Plhdr(_) -> [ H(
                            [SOpt(HS(), "0")]
                          , [S("$Literal")]
                          )
                        ]

  is-metaborg-java-Literal =
    ?Literal-Plhdr(_)

  prettyprint-metaborg-java-Expression :
    Expression-Plhdr(_) -> [ H(
                               [SOpt(HS(), "0")]
                             , [S("$Expression")]
                             )
                           ]

  is-metaborg-java-Expression =
    ?Expression-Plhdr(_)

  prettyprint-metaborg-java-TypeName :
    TypeName-Plhdr(_) -> [ H(
                             [SOpt(HS(), "0")]
                           , [S("$TypeName")]
                           )
                         ]

  is-metaborg-java-TypeName =
    ?TypeName-Plhdr(_)

  prettyprint-metaborg-java-NumericType :
    NumericType-Plhdr(_) -> [ H(
                                [SOpt(HS(), "0")]
                              , [S("$NumericType")]
                              )
                            ]

  is-metaborg-java-NumericType =
    ?NumericType-Plhdr(_)

  prettyprint-metaborg-java-ClassLiteral :
    ClassLiteral-Plhdr(_) -> [ H(
                                 [SOpt(HS(), "0")]
                               , [S("$ClassLiteral")]
                               )
                             ]

  is-metaborg-java-ClassLiteral =
    ?ClassLiteral-Plhdr(_)

  prettyprint-metaborg-java-Dims :
    Dims-Plhdr(_) -> [ H(
                         [SOpt(HS(), "0")]
                       , [S("$Dims")]
                       )
                     ]

  is-metaborg-java-Dims =
    ?Dims-Plhdr(_)

  prettyprint-metaborg-java-Dims :
    Dims-Opt-Plhdr() -> [ H(
                            []
                          , [S("")]
                          )
                        ]

  is-metaborg-java-Dims =
    ?Dims-Opt-Plhdr()