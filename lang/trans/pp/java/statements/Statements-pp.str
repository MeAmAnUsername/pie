module pp/java/statements/Statements-pp

imports
  libstratego-gpp
  libspoofax/sdf/pp
  libspoofax/term/origin
  libspoofax/term/annotation
  libstratego-sglr
  libstratego-sglr
  signatures/java/statements/Statements-sig


imports
  signatures/java/classes/FieldDeclarations-sig
  signatures/java/classes/MethodDeclarations-sig
  signatures/java/lexical/Identifiers-sig
  signatures/java/statements/Blocks-sig
  signatures/java/names/Names-sig
  signatures/java/types/ReferenceTypes-sig
  signatures/java/expressions/Main-sig


imports
  pp/java/classes/FieldDeclarations-pp
  pp/java/classes/MethodDeclarations-pp
  pp/java/lexical/Identifiers-pp
  pp/java/statements/Blocks-pp
  pp/java/names/Names-pp
  pp/java/types/ReferenceTypes-pp
  pp/java/expressions/Main-pp


strategies
  prettyprint-example =
    prettyprint-metaborg-java

  prettyprint-metaborg-java =
    fail

  prettyprint-metaborg-java(|sort) =
    fail


strategies
  prettyprint-SDF-start-symbols =
    prettyprint-metaborg-java-start-symbols

  prettyprint-metaborg-java-start-symbols =
    fail


strategies
  prettyprint-metaborg-java =
    prettyprint-metaborg-java-ForInit

  prettyprint-metaborg-java =
    prettyprint-metaborg-java-ForUpdate

  prettyprint-metaborg-java =
    prettyprint-metaborg-java-SwitchGroup

  prettyprint-metaborg-java =
    prettyprint-metaborg-java-SwitchLabel

  prettyprint-metaborg-java =
    prettyprint-metaborg-java-CatchClause

  prettyprint-metaborg-java =
    prettyprint-metaborg-java-CatchFormalParameter

  prettyprint-metaborg-java =
    prettyprint-metaborg-java-CatchType

  prettyprint-metaborg-java =
    prettyprint-metaborg-java-CatchTypeRest

  prettyprint-metaborg-java =
    prettyprint-metaborg-java-Statement

  prettyprint-metaborg-java =
    prettyprint-metaborg-java-Resource

  prettyprint-metaborg-java(|sort):
    t -> <prettyprint-metaborg-java-ForInit>
    where <?"ForInit"> sort

  prettyprint-metaborg-java(|sort):
    t -> <prettyprint-metaborg-java-ForUpdate>
    where <?"ForUpdate"> sort

  prettyprint-metaborg-java(|sort):
    t -> <prettyprint-metaborg-java-SwitchGroup>
    where <?"SwitchGroup"> sort

  prettyprint-metaborg-java(|sort):
    t -> <prettyprint-metaborg-java-SwitchLabel>
    where <?"SwitchLabel"> sort

  prettyprint-metaborg-java(|sort):
    t -> <prettyprint-metaborg-java-CatchClause>
    where <?"CatchClause"> sort

  prettyprint-metaborg-java(|sort):
    t -> <prettyprint-metaborg-java-CatchFormalParameter>
    where <?"CatchFormalParameter"> sort

  prettyprint-metaborg-java(|sort):
    t -> <prettyprint-metaborg-java-CatchType>
    where <?"CatchType"> sort

  prettyprint-metaborg-java(|sort):
    t -> <prettyprint-metaborg-java-CatchTypeRest>
    where <?"CatchTypeRest"> sort

  prettyprint-metaborg-java(|sort):
    t -> <prettyprint-metaborg-java-Statement>
    where <?"Statement"> sort

  prettyprint-metaborg-java(|sort):
    t -> <prettyprint-metaborg-java-Resource>
    where <?"Resource"> sort

  prettyprint-metaborg-java-Statement :
    Labeled(t1__, t2__) -> [ H(
                               [SOpt(HS(), "0")]
                             , t1__'
                             )
                           ]
    with t1__' := <clean-layout-empty-symbols(
                   | ""
                   , FALSE()
                   , FALSE()
                   )
                   ; flatten-list> [ <check-nonterminal-isEmpty ; id
                                      <+ pp-one-Z(prettyprint-metaborg-java-Id)
                                      <+ pp-one-Z(prettyprint-completion-aux)> t1__
                                   , S(" ")
                                   , S(":")
                                   , S(" ")
                                   , <check-nonterminal-isEmpty ; id
                                      <+ pp-one-Z(prettyprint-metaborg-java-Statement)
                                      <+ pp-one-Z(prettyprint-completion-aux)> t2__
                                   ]

  is-metaborg-java-Statement =
    ?Labeled(_, _)

  metaborg-java-get-indent :
    (t@Labeled(t1__, t2__), index) -> indent
    where sort := <ia-get-sort> t
          ; <?"Statement"> sort
    with switch !index
           case ?1 :
             indent := ""
           case ?2 :
             indent := ""
           otherwise :
             indent := ""
         end

  metaborg-java-get-separator :
    (t@Labeled(t1__, t2__), index) -> separator
    where sort := <ia-get-sort> t
          ; <?"Statement"> sort
    with switch !index
           case ?1 :
             separator := ""
           case ?2 :
             separator := ""
           otherwise :
             separator := ""
         end

  metaborg-java-get-leading-ws :
    (t@Labeled(t1__, t2__), index) -> ws
    where sort := <ia-get-sort> t
          ; <?"Statement"> sort
    with switch !index
           case ?1 :
             ws := ""
           case ?2 :
             ws := " "
           otherwise :
             ws := ""
         end

  prettyprint-metaborg-java-Statement :
    If(t1__, t2__) -> [ H(
                          [SOpt(HS(), "0")]
                        , t1__'
                        )
                      ]
    with t1__' := <clean-layout-empty-symbols(
                   | ""
                   , FALSE()
                   , FALSE()
                   )
                   ; flatten-list> [ S("if(")
                                   , <check-nonterminal-isEmpty ; id
                                      <+ pp-one-Z(prettyprint-metaborg-java-Expression)
                                      <+ pp-one-Z(prettyprint-completion-aux)> t1__
                                   , S(")")
                                   , S(" ")
                                   , <check-nonterminal-isEmpty ; id
                                      <+ pp-one-Z(prettyprint-metaborg-java-Statement)
                                      <+ pp-one-Z(prettyprint-completion-aux)> t2__
                                   ]

  is-metaborg-java-Statement =
    ?If(_, _)

  metaborg-java-get-indent :
    (t@If(t1__, t2__), index) -> indent
    where sort := <ia-get-sort> t
          ; <?"Statement"> sort
    with switch !index
           case ?1 :
             indent := ""
           case ?2 :
             indent := ""
           otherwise :
             indent := ""
         end

  metaborg-java-get-separator :
    (t@If(t1__, t2__), index) -> separator
    where sort := <ia-get-sort> t
          ; <?"Statement"> sort
    with switch !index
           case ?1 :
             separator := ""
           case ?2 :
             separator := ""
           otherwise :
             separator := ""
         end

  metaborg-java-get-leading-ws :
    (t@If(t1__, t2__), index) -> ws
    where sort := <ia-get-sort> t
          ; <?"Statement"> sort
    with switch !index
           case ?1 :
             ws := ""
           case ?2 :
             ws := " "
           otherwise :
             ws := ""
         end

  prettyprint-metaborg-java-Statement :
    IfElse(t1__, t2__, t3__) -> [ H(
                                    [SOpt(HS(), "0")]
                                  , t1__'
                                  )
                                ]
    with t1__' := <clean-layout-empty-symbols(
                   | ""
                   , FALSE()
                   , FALSE()
                   )
                   ; flatten-list> [ S("if(")
                                   , <check-nonterminal-isEmpty ; id
                                      <+ pp-one-Z(prettyprint-metaborg-java-Expression)
                                      <+ pp-one-Z(prettyprint-completion-aux)> t1__
                                   , S(")")
                                   , S(" ")
                                   , <check-nonterminal-isEmpty ; id
                                      <+ pp-one-Z(prettyprint-metaborg-java-Statement)
                                      <+ pp-one-Z(prettyprint-completion-aux)> t2__
                                   , S(" ")
                                   , S("else")
                                   , S(" ")
                                   , <check-nonterminal-isEmpty ; id
                                      <+ pp-one-Z(prettyprint-metaborg-java-Statement)
                                      <+ pp-one-Z(prettyprint-completion-aux)> t3__
                                   ]

  is-metaborg-java-Statement =
    ?IfElse(_, _, _)

  metaborg-java-get-indent :
    ( t@IfElse(t1__, t2__, t3__)
    , index
    ) -> indent
    where sort := <ia-get-sort> t
          ; <?"Statement"> sort
    with switch !index
           case ?1 :
             indent := ""
           case ?2 :
             indent := ""
           case ?3 :
             indent := ""
           otherwise :
             indent := ""
         end

  metaborg-java-get-separator :
    ( t@IfElse(t1__, t2__, t3__)
    , index
    ) -> separator
    where sort := <ia-get-sort> t
          ; <?"Statement"> sort
    with switch !index
           case ?1 :
             separator := ""
           case ?2 :
             separator := ""
           case ?3 :
             separator := ""
           otherwise :
             separator := ""
         end

  metaborg-java-get-leading-ws :
    ( t@IfElse(t1__, t2__, t3__)
    , index
    ) -> ws
    where sort := <ia-get-sort> t
          ; <?"Statement"> sort
    with switch !index
           case ?1 :
             ws := ""
           case ?2 :
             ws := " "
           case ?3 :
             ws := " "
           otherwise :
             ws := ""
         end

  prettyprint-metaborg-java-Statement :
    While(t1__, t2__) -> [ H(
                             [SOpt(HS(), "0")]
                           , t1__'
                           )
                         ]
    with t1__' := <clean-layout-empty-symbols(
                   | ""
                   , FALSE()
                   , FALSE()
                   )
                   ; flatten-list> [ S("while(")
                                   , <check-nonterminal-isEmpty ; id
                                      <+ pp-one-Z(prettyprint-metaborg-java-Expression)
                                      <+ pp-one-Z(prettyprint-completion-aux)> t1__
                                   , S(")")
                                   , S(" ")
                                   , <check-nonterminal-isEmpty ; id
                                      <+ pp-one-Z(prettyprint-metaborg-java-Statement)
                                      <+ pp-one-Z(prettyprint-completion-aux)> t2__
                                   ]

  is-metaborg-java-Statement =
    ?While(_, _)

  metaborg-java-get-indent :
    (t@While(t1__, t2__), index) -> indent
    where sort := <ia-get-sort> t
          ; <?"Statement"> sort
    with switch !index
           case ?1 :
             indent := ""
           case ?2 :
             indent := ""
           otherwise :
             indent := ""
         end

  metaborg-java-get-separator :
    (t@While(t1__, t2__), index) -> separator
    where sort := <ia-get-sort> t
          ; <?"Statement"> sort
    with switch !index
           case ?1 :
             separator := ""
           case ?2 :
             separator := ""
           otherwise :
             separator := ""
         end

  metaborg-java-get-leading-ws :
    (t@While(t1__, t2__), index) -> ws
    where sort := <ia-get-sort> t
          ; <?"Statement"> sort
    with switch !index
           case ?1 :
             ws := ""
           case ?2 :
             ws := " "
           otherwise :
             ws := ""
         end

  prettyprint-metaborg-java-Statement :
    For(t1__, t2__, t3__, t4__) -> [ H(
                                       [SOpt(HS(), "0")]
                                     , t1__'
                                     )
                                   ]
    with t1__' := <clean-layout-empty-symbols(
                   | ""
                   , FALSE()
                   , FALSE()
                   )
                   ; flatten-list> [ S("for(")
                                   , <check-nonterminal-isEmpty ; id
                                      <+ pp-one-Z(prettyprint-metaborg-java-ForInit)
                                      <+ pp-one-Z(prettyprint-completion-aux)> t1__
                                   , S(";")
                                   , S(" ")
                                   , <check-nonterminal-isEmpty ; id
                                      <+ pp-option(
                                           check-nonterminal-isEmpty ; id
                                           <+ pp-one-Z(prettyprint-metaborg-java-Expression)
                                           <+ pp-one-Z(prettyprint-completion-aux)
                                         )> t2__
                                   , S(";")
                                   , S(" ")
                                   , <check-nonterminal-isEmpty ; id
                                      <+ pp-one-Z(prettyprint-metaborg-java-ForUpdate)
                                      <+ pp-one-Z(prettyprint-completion-aux)> t3__
                                   , S(")")
                                   , S(" ")
                                   , <check-nonterminal-isEmpty ; id
                                      <+ pp-one-Z(prettyprint-metaborg-java-Statement)
                                      <+ pp-one-Z(prettyprint-completion-aux)> t4__
                                   ]

  is-metaborg-java-Statement =
    ?For(_, _, _, _)

  metaborg-java-get-indent :
    ( t@For(t1__, t2__, t3__, t4__)
    , index
    ) -> indent
    where sort := <ia-get-sort> t
          ; <?"Statement"> sort
    with switch !index
           case ?1 :
             indent := ""
           case ?2 :
             indent := ""
           case ?3 :
             indent := ""
           case ?4 :
             indent := ""
           otherwise :
             indent := ""
         end

  metaborg-java-get-separator :
    ( t@For(t1__, t2__, t3__, t4__)
    , index
    ) -> separator
    where sort := <ia-get-sort> t
          ; <?"Statement"> sort
    with switch !index
           case ?1 :
             separator := ""
           case ?2 :
             separator := ""
           case ?3 :
             separator := ""
           case ?4 :
             separator := ""
           otherwise :
             separator := ""
         end

  metaborg-java-get-leading-ws :
    ( t@For(t1__, t2__, t3__, t4__)
    , index
    ) -> ws
    where sort := <ia-get-sort> t
          ; <?"Statement"> sort
    with switch !index
           case ?1 :
             ws := ""
           case ?2 :
             ws := " "
           case ?3 :
             ws := " "
           case ?4 :
             ws := " "
           otherwise :
             ws := ""
         end

  prettyprint-metaborg-java-Statement :
    ForEach(t1__, t2__, t3__, t4__, t5__) -> [ H(
                                                 [SOpt(HS(), "0")]
                                               , t1__'
                                               )
                                             ]
    with t1__' := <clean-layout-empty-symbols(
                   | ""
                   , FALSE()
                   , FALSE()
                   )
                   ; flatten-list> [ S("for(")
                                   , <check-nonterminal-isEmpty ; id
                                      <+ pp-H-list(prettyprint-metaborg-java-VariableModifier|" ")
                                      <+ pp-one-Z(prettyprint-completion-aux)> t1__
                                   , S(" ")
                                   , <check-nonterminal-isEmpty ; id
                                      <+ pp-one-Z(prettyprint-metaborg-java-UnannType)
                                      <+ pp-one-Z(prettyprint-completion-aux)> t2__
                                   , S(" ")
                                   , <check-nonterminal-isEmpty ; id
                                      <+ pp-one-Z(prettyprint-metaborg-java-VarDeclId)
                                      <+ pp-one-Z(prettyprint-completion-aux)> t3__
                                   , S(" ")
                                   , S(":")
                                   , S(" ")
                                   , <check-nonterminal-isEmpty ; id
                                      <+ pp-one-Z(prettyprint-metaborg-java-Expression)
                                      <+ pp-one-Z(prettyprint-completion-aux)> t4__
                                   , S(")")
                                   , S(" ")
                                   , <check-nonterminal-isEmpty ; id
                                      <+ pp-one-Z(prettyprint-metaborg-java-Statement)
                                      <+ pp-one-Z(prettyprint-completion-aux)> t5__
                                   ]

  is-metaborg-java-Statement =
    ?ForEach(_, _, _, _, _)

  metaborg-java-get-indent :
    ( t@ForEach(t1__, t2__, t3__, t4__, t5__)
    , index
    ) -> indent
    where sort := <ia-get-sort> t
          ; <?"Statement"> sort
    with switch !index
           case ?1 :
             indent := ""
           case ?2 :
             indent := ""
           case ?3 :
             indent := ""
           case ?4 :
             indent := ""
           case ?5 :
             indent := ""
           otherwise :
             indent := ""
         end

  metaborg-java-get-separator :
    ( t@ForEach(t1__, t2__, t3__, t4__, t5__)
    , index
    ) -> separator
    where sort := <ia-get-sort> t
          ; <?"Statement"> sort
    with switch !index
           case ?1 :
             separator := " "
           case ?2 :
             separator := ""
           case ?3 :
             separator := ""
           case ?4 :
             separator := ""
           case ?5 :
             separator := ""
           otherwise :
             separator := ""
         end

  metaborg-java-get-leading-ws :
    ( t@ForEach(t1__, t2__, t3__, t4__, t5__)
    , index
    ) -> ws
    where sort := <ia-get-sort> t
          ; <?"Statement"> sort
    with switch !index
           case ?1 :
             ws := ""
           case ?2 :
             ws := " "
           case ?3 :
             ws := " "
           case ?4 :
             ws := " "
           case ?5 :
             ws := " "
           otherwise :
             ws := ""
         end

  prettyprint-metaborg-java-ForInit :
    ExprList(t1__) -> [ H(
                          [SOpt(HS(), "0")]
                        , t1__'
                        )
                      ]
    with t1__' := <clean-layout-empty-symbols(
                   | ""
                   , FALSE()
                   , FALSE()
                   )
                   ; flatten-list> [ <check-nonterminal-isEmpty ; id
                                      <+ pp-H-list(prettyprint-metaborg-java-Expression|", ")
                                      <+ pp-one-Z(prettyprint-completion-aux)> t1__
                                   ]

  is-metaborg-java-ForInit =
    ?ExprList(_)

  metaborg-java-get-indent :
    (t@ExprList(t1__), index) -> indent
    where sort := <ia-get-sort> t
          ; <?"ForInit"> sort
    with switch !index
           case ?1 :
             indent := ""
           otherwise :
             indent := ""
         end

  metaborg-java-get-separator :
    (t@ExprList(t1__), index) -> separator
    where sort := <ia-get-sort> t
          ; <?"ForInit"> sort
    with switch !index
           case ?1 :
             separator := ", "
           otherwise :
             separator := ""
         end

  metaborg-java-get-leading-ws :
    (t@ExprList(t1__), index) -> ws
    where sort := <ia-get-sort> t
          ; <?"ForInit"> sort
    with switch !index
           case ?1 :
             ws := ""
           otherwise :
             ws := ""
         end

  prettyprint-metaborg-java-ForInit :
    VarDecls(t1__, t2__, t3__) -> [ H(
                                      [SOpt(HS(), "0")]
                                    , t1__'
                                    )
                                  ]
    with t1__' := <clean-layout-empty-symbols(
                   | ""
                   , FALSE()
                   , FALSE()
                   )
                   ; flatten-list> [ <check-nonterminal-isEmpty ; id
                                      <+ pp-H-list(prettyprint-metaborg-java-VariableModifier|" ")
                                      <+ pp-one-Z(prettyprint-completion-aux)> t1__
                                   , S(" ")
                                   , <check-nonterminal-isEmpty ; id
                                      <+ pp-one-Z(prettyprint-metaborg-java-UnannType)
                                      <+ pp-one-Z(prettyprint-completion-aux)> t2__
                                   , S(" ")
                                   , <check-nonterminal-isEmpty ; id
                                      <+ pp-H-list(prettyprint-metaborg-java-VarDecl|", ")
                                      <+ pp-one-Z(prettyprint-completion-aux)> t3__
                                   ]

  is-metaborg-java-ForInit =
    ?VarDecls(_, _, _)

  metaborg-java-get-indent :
    ( t@VarDecls(t1__, t2__, t3__)
    , index
    ) -> indent
    where sort := <ia-get-sort> t
          ; <?"ForInit"> sort
    with switch !index
           case ?1 :
             indent := ""
           case ?2 :
             indent := ""
           case ?3 :
             indent := ""
           otherwise :
             indent := ""
         end

  metaborg-java-get-separator :
    ( t@VarDecls(t1__, t2__, t3__)
    , index
    ) -> separator
    where sort := <ia-get-sort> t
          ; <?"ForInit"> sort
    with switch !index
           case ?1 :
             separator := " "
           case ?2 :
             separator := ""
           case ?3 :
             separator := ", "
           otherwise :
             separator := ""
         end

  metaborg-java-get-leading-ws :
    ( t@VarDecls(t1__, t2__, t3__)
    , index
    ) -> ws
    where sort := <ia-get-sort> t
          ; <?"ForInit"> sort
    with switch !index
           case ?1 :
             ws := ""
           case ?2 :
             ws := " "
           case ?3 :
             ws := " "
           otherwise :
             ws := ""
         end

  prettyprint-metaborg-java-ForUpdate :
    ExprList(t1__) -> [ H(
                          [SOpt(HS(), "0")]
                        , t1__'
                        )
                      ]
    with t1__' := <clean-layout-empty-symbols(
                   | ""
                   , FALSE()
                   , FALSE()
                   )
                   ; flatten-list> [ <check-nonterminal-isEmpty ; id
                                      <+ pp-H-list(prettyprint-metaborg-java-Expression|", ")
                                      <+ pp-one-Z(prettyprint-completion-aux)> t1__
                                   ]

  is-metaborg-java-ForUpdate =
    ?ExprList(_)

  metaborg-java-get-indent :
    (t@ExprList(t1__), index) -> indent
    where sort := <ia-get-sort> t
          ; <?"ForUpdate"> sort
    with switch !index
           case ?1 :
             indent := ""
           otherwise :
             indent := ""
         end

  metaborg-java-get-separator :
    (t@ExprList(t1__), index) -> separator
    where sort := <ia-get-sort> t
          ; <?"ForUpdate"> sort
    with switch !index
           case ?1 :
             separator := ", "
           otherwise :
             separator := ""
         end

  metaborg-java-get-leading-ws :
    (t@ExprList(t1__), index) -> ws
    where sort := <ia-get-sort> t
          ; <?"ForUpdate"> sort
    with switch !index
           case ?1 :
             ws := ""
           otherwise :
             ws := ""
         end

  prettyprint-metaborg-java-Statement :
    t1__ -> [ H(
                [SOpt(HS(), "0")]
              , t1__'
              )
            ]
    where not(is-metaborg-java-Statement)
    where t1__' := <clean-layout-empty-symbols(
                    | ""
                    , FALSE()
                    , FALSE()
                    )
                    ; flatten-list> [ <check-nonterminal-isEmpty ; id
                                       <+ pp-one-Z(prettyprint-metaborg-java-Block)
                                       <+ pp-one-Z(prettyprint-completion-aux)> t1__
                                    ]

  prettyprint-metaborg-java-Statement :
    Empty() -> [ H(
                   [SOpt(HS(), "0")]
                 , t1__'
                 )
               ]
    with t1__' := <clean-layout-empty-symbols(
                   | ""
                   , FALSE()
                   , FALSE()
                   )
                   ; flatten-list> [S(";")]

  is-metaborg-java-Statement =
    ?Empty()

  metaborg-java-get-indent :
    (t@Empty(), index) -> indent
    where sort := <ia-get-sort> t
          ; <?"Statement"> sort
    with switch !index
           otherwise :
             indent := ""
         end

  metaborg-java-get-separator :
    (t@Empty(), index) -> separator
    where sort := <ia-get-sort> t
          ; <?"Statement"> sort
    with switch !index
           otherwise :
             separator := ""
         end

  metaborg-java-get-leading-ws :
    (t@Empty(), index) -> ws
    where sort := <ia-get-sort> t
          ; <?"Statement"> sort
    with switch !index
           otherwise :
             ws := ""
         end

  prettyprint-metaborg-java-Statement :
    ExpressionStatement(t1__) -> [ H(
                                     [SOpt(HS(), "0")]
                                   , t1__'
                                   )
                                 ]
    with t1__' := <clean-layout-empty-symbols(
                   | ""
                   , FALSE()
                   , FALSE()
                   )
                   ; flatten-list> [ <check-nonterminal-isEmpty ; id
                                      <+ pp-one-Z(prettyprint-metaborg-java-Expression)
                                      <+ pp-one-Z(prettyprint-completion-aux)> t1__
                                   , S(";")
                                   ]

  is-metaborg-java-Statement =
    ?ExpressionStatement(_)

  metaborg-java-get-indent :
    (t@ExpressionStatement(t1__), index) -> indent
    where sort := <ia-get-sort> t
          ; <?"Statement"> sort
    with switch !index
           case ?1 :
             indent := ""
           otherwise :
             indent := ""
         end

  metaborg-java-get-separator :
    (t@ExpressionStatement(t1__), index) -> separator
    where sort := <ia-get-sort> t
          ; <?"Statement"> sort
    with switch !index
           case ?1 :
             separator := ""
           otherwise :
             separator := ""
         end

  metaborg-java-get-leading-ws :
    (t@ExpressionStatement(t1__), index) -> ws
    where sort := <ia-get-sort> t
          ; <?"Statement"> sort
    with switch !index
           case ?1 :
             ws := ""
           otherwise :
             ws := ""
         end

  prettyprint-metaborg-java-Statement :
    Assert(t1__) -> [ H(
                        [SOpt(HS(), "0")]
                      , t1__'
                      )
                    ]
    with t1__' := <clean-layout-empty-symbols(
                   | ""
                   , FALSE()
                   , FALSE()
                   )
                   ; flatten-list> [ S("assert")
                                   , S(" ")
                                   , <check-nonterminal-isEmpty ; id
                                      <+ pp-one-Z(prettyprint-metaborg-java-Expression)
                                      <+ pp-one-Z(prettyprint-completion-aux)> t1__
                                   , S(";")
                                   ]

  is-metaborg-java-Statement =
    ?Assert(_)

  metaborg-java-get-indent :
    (t@Assert(t1__), index) -> indent
    where sort := <ia-get-sort> t
          ; <?"Statement"> sort
    with switch !index
           case ?1 :
             indent := ""
           otherwise :
             indent := ""
         end

  metaborg-java-get-separator :
    (t@Assert(t1__), index) -> separator
    where sort := <ia-get-sort> t
          ; <?"Statement"> sort
    with switch !index
           case ?1 :
             separator := ""
           otherwise :
             separator := ""
         end

  metaborg-java-get-leading-ws :
    (t@Assert(t1__), index) -> ws
    where sort := <ia-get-sort> t
          ; <?"Statement"> sort
    with switch !index
           case ?1 :
             ws := " "
           otherwise :
             ws := ""
         end

  prettyprint-metaborg-java-Statement :
    Assert(t1__, t2__) -> [ H(
                              [SOpt(HS(), "0")]
                            , t1__'
                            )
                          ]
    with t1__' := <clean-layout-empty-symbols(
                   | ""
                   , FALSE()
                   , FALSE()
                   )
                   ; flatten-list> [ S("assert")
                                   , S(" ")
                                   , <check-nonterminal-isEmpty ; id
                                      <+ pp-one-Z(prettyprint-metaborg-java-Expression)
                                      <+ pp-one-Z(prettyprint-completion-aux)> t1__
                                   , S(" ")
                                   , S(":")
                                   , S(" ")
                                   , <check-nonterminal-isEmpty ; id
                                      <+ pp-one-Z(prettyprint-metaborg-java-Expression)
                                      <+ pp-one-Z(prettyprint-completion-aux)> t2__
                                   , S(";")
                                   ]

  is-metaborg-java-Statement =
    ?Assert(_, _)

  metaborg-java-get-indent :
    (t@Assert(t1__, t2__), index) -> indent
    where sort := <ia-get-sort> t
          ; <?"Statement"> sort
    with switch !index
           case ?1 :
             indent := ""
           case ?2 :
             indent := ""
           otherwise :
             indent := ""
         end

  metaborg-java-get-separator :
    (t@Assert(t1__, t2__), index) -> separator
    where sort := <ia-get-sort> t
          ; <?"Statement"> sort
    with switch !index
           case ?1 :
             separator := ""
           case ?2 :
             separator := ""
           otherwise :
             separator := ""
         end

  metaborg-java-get-leading-ws :
    (t@Assert(t1__, t2__), index) -> ws
    where sort := <ia-get-sort> t
          ; <?"Statement"> sort
    with switch !index
           case ?1 :
             ws := " "
           case ?2 :
             ws := " "
           otherwise :
             ws := ""
         end

  prettyprint-metaborg-java-Statement :
    Switch(t1__, t2__, t3__) -> [ H(
                                    [SOpt(HS(), "0")]
                                  , t1__'
                                  )
                                , t2__'
                                , t3__'
                                , H(
                                    [SOpt(HS(), "0")]
                                  , t4__'
                                  )
                                ]
    with t1__' := <clean-layout-empty-symbols(
                   | ""
                   , FALSE()
                   , FALSE()
                   )
                   ; flatten-list> [ S("switch(")
                                   , <check-nonterminal-isEmpty ; id
                                      <+ pp-one-Z(prettyprint-metaborg-java-Expression)
                                      <+ pp-one-Z(prettyprint-completion-aux)> t1__
                                   , S(")")
                                   , S(" ")
                                   , S("{")
                                   ]
    with t2__' := <clean-layout-empty-symbols(
                   | ""
                   , FALSE()
                   , FALSE()
                   )
                   ; flatten-list
                   ; pp-indent(|"2")> [ <check-nonterminal-isEmpty ; id
                                         <+ pp-V-list(prettyprint-metaborg-java-SwitchGroup)
                                         <+ pp-one-Z(prettyprint-completion-aux)> t2__
                                      ]
    with t3__' := <clean-layout-empty-symbols(
                   | ""
                   , FALSE()
                   , FALSE()
                   )
                   ; flatten-list
                   ; pp-indent(|"2")> [ <check-nonterminal-isEmpty ; id
                                         <+ pp-V-list(prettyprint-metaborg-java-SwitchLabel)
                                         <+ pp-one-Z(prettyprint-completion-aux)> t3__
                                      ]
    with t4__' := <clean-layout-empty-symbols(
                   | ""
                   , FALSE()
                   , FALSE()
                   )
                   ; flatten-list> [S("}")]

  is-metaborg-java-Statement =
    ?Switch(_, _, _)

  metaborg-java-get-indent :
    ( t@Switch(t1__, t2__, t3__)
    , index
    ) -> indent
    where sort := <ia-get-sort> t
          ; <?"Statement"> sort
    with switch !index
           case ?1 :
             indent := ""
           case ?2 :
             indent := "  "
           case ?3 :
             indent := "  "
           otherwise :
             indent := ""
         end

  metaborg-java-get-separator :
    ( t@Switch(t1__, t2__, t3__)
    , index
    ) -> separator
    where sort := <ia-get-sort> t
          ; <?"Statement"> sort
    with switch !index
           case ?1 :
             separator := ""
           case ?2 :
             separator := "\n"
           case ?3 :
             separator := "\n"
           otherwise :
             separator := ""
         end

  metaborg-java-get-leading-ws :
    ( t@Switch(t1__, t2__, t3__)
    , index
    ) -> ws
    where sort := <ia-get-sort> t
          ; <?"Statement"> sort
    with switch !index
           case ?1 :
             ws := ""
           case ?2 :
             ws := "\n  "
           case ?3 :
             ws := "\n  "
           otherwise :
             ws := ""
         end

  prettyprint-metaborg-java-SwitchGroup :
    SwitchGroup(t1__, t2__) -> [ H(
                                   [SOpt(HS(), "0")]
                                 , t1__'
                                 )
                               , H(
                                   [SOpt(HS(), "0")]
                                 , t2__'
                                 )
                               ]
    with t1__' := <clean-layout-empty-symbols(
                   | ""
                   , FALSE()
                   , FALSE()
                   )
                   ; flatten-list> [ <check-nonterminal-isEmpty ; id
                                      <+ pp-V-list(prettyprint-metaborg-java-SwitchLabel)
                                      <+ pp-one-Z(prettyprint-completion-aux)> t1__
                                   ]
    with t2__' := <clean-layout-empty-symbols(
                   | ""
                   , FALSE()
                   , FALSE()
                   )
                   ; flatten-list> [ <check-nonterminal-isEmpty ; id
                                      <+ pp-V-list(prettyprint-metaborg-java-BlockStatement)
                                      <+ pp-one-Z(prettyprint-completion-aux)> t2__
                                   ]

  is-metaborg-java-SwitchGroup =
    ?SwitchGroup(_, _)

  metaborg-java-get-indent :
    (t@SwitchGroup(t1__, t2__), index) -> indent
    where sort := <ia-get-sort> t
          ; <?"SwitchGroup"> sort
    with switch !index
           case ?1 :
             indent := ""
           case ?2 :
             indent := ""
           otherwise :
             indent := ""
         end

  metaborg-java-get-separator :
    (t@SwitchGroup(t1__, t2__), index) -> separator
    where sort := <ia-get-sort> t
          ; <?"SwitchGroup"> sort
    with switch !index
           case ?1 :
             separator := "\n"
           case ?2 :
             separator := "\n"
           otherwise :
             separator := ""
         end

  metaborg-java-get-leading-ws :
    (t@SwitchGroup(t1__, t2__), index) -> ws
    where sort := <ia-get-sort> t
          ; <?"SwitchGroup"> sort
    with switch !index
           case ?1 :
             ws := ""
           case ?2 :
             ws := "\n"
           otherwise :
             ws := ""
         end

  prettyprint-metaborg-java-SwitchLabel :
    CaseExpr(t1__) -> [ H(
                          [SOpt(HS(), "0")]
                        , t1__'
                        )
                      ]
    with t1__' := <clean-layout-empty-symbols(
                   | ""
                   , FALSE()
                   , FALSE()
                   )
                   ; flatten-list> [ S("case")
                                   , S(" ")
                                   , <check-nonterminal-isEmpty ; id
                                      <+ pp-one-Z(prettyprint-metaborg-java-Expression)
                                      <+ pp-one-Z(prettyprint-completion-aux)> t1__
                                   , S(" ")
                                   , S(":")
                                   ]

  is-metaborg-java-SwitchLabel =
    ?CaseExpr(_)

  metaborg-java-get-indent :
    (t@CaseExpr(t1__), index) -> indent
    where sort := <ia-get-sort> t
          ; <?"SwitchLabel"> sort
    with switch !index
           case ?1 :
             indent := ""
           otherwise :
             indent := ""
         end

  metaborg-java-get-separator :
    (t@CaseExpr(t1__), index) -> separator
    where sort := <ia-get-sort> t
          ; <?"SwitchLabel"> sort
    with switch !index
           case ?1 :
             separator := ""
           otherwise :
             separator := ""
         end

  metaborg-java-get-leading-ws :
    (t@CaseExpr(t1__), index) -> ws
    where sort := <ia-get-sort> t
          ; <?"SwitchLabel"> sort
    with switch !index
           case ?1 :
             ws := " "
           otherwise :
             ws := ""
         end

  prettyprint-metaborg-java-SwitchLabel :
    Default() -> [ H(
                     [SOpt(HS(), "0")]
                   , t1__'
                   )
                 ]
    with t1__' := <clean-layout-empty-symbols(
                   | ""
                   , FALSE()
                   , FALSE()
                   )
                   ; flatten-list> [ S("default")
                                   , S(" ")
                                   , S(":")
                                   ]

  is-metaborg-java-SwitchLabel =
    ?Default()

  metaborg-java-get-indent :
    (t@Default(), index) -> indent
    where sort := <ia-get-sort> t
          ; <?"SwitchLabel"> sort
    with switch !index
           otherwise :
             indent := ""
         end

  metaborg-java-get-separator :
    (t@Default(), index) -> separator
    where sort := <ia-get-sort> t
          ; <?"SwitchLabel"> sort
    with switch !index
           otherwise :
             separator := ""
         end

  metaborg-java-get-leading-ws :
    (t@Default(), index) -> ws
    where sort := <ia-get-sort> t
          ; <?"SwitchLabel"> sort
    with switch !index
           otherwise :
             ws := ""
         end

  prettyprint-metaborg-java-Statement :
    DoWhile(t1__, t2__) -> [ H(
                               [SOpt(HS(), "0")]
                             , t1__'
                             )
                           , H(
                               [SOpt(HS(), "0")]
                             , t2__'
                             )
                           ]
    with t1__' := <clean-layout-empty-symbols(
                   | ""
                   , FALSE()
                   , FALSE()
                   )
                   ; flatten-list> [ S("do")
                                   , S(" ")
                                   , <check-nonterminal-isEmpty ; id
                                      <+ pp-one-Z(prettyprint-metaborg-java-Statement)
                                      <+ pp-one-Z(prettyprint-completion-aux)> t1__
                                   ]
    with t2__' := <clean-layout-empty-symbols(
                   | ""
                   , FALSE()
                   , FALSE()
                   )
                   ; flatten-list> [ S("while(")
                                   , <check-nonterminal-isEmpty ; id
                                      <+ pp-one-Z(prettyprint-metaborg-java-Expression)
                                      <+ pp-one-Z(prettyprint-completion-aux)> t2__
                                   , S(");")
                                   ]

  is-metaborg-java-Statement =
    ?DoWhile(_, _)

  metaborg-java-get-indent :
    (t@DoWhile(t1__, t2__), index) -> indent
    where sort := <ia-get-sort> t
          ; <?"Statement"> sort
    with switch !index
           case ?1 :
             indent := ""
           case ?2 :
             indent := ""
           otherwise :
             indent := ""
         end

  metaborg-java-get-separator :
    (t@DoWhile(t1__, t2__), index) -> separator
    where sort := <ia-get-sort> t
          ; <?"Statement"> sort
    with switch !index
           case ?1 :
             separator := ""
           case ?2 :
             separator := ""
           otherwise :
             separator := ""
         end

  metaborg-java-get-leading-ws :
    (t@DoWhile(t1__, t2__), index) -> ws
    where sort := <ia-get-sort> t
          ; <?"Statement"> sort
    with switch !index
           case ?1 :
             ws := " "
           case ?2 :
             ws := ""
           otherwise :
             ws := ""
         end

  prettyprint-metaborg-java-Statement :
    Break() -> [ H(
                   [SOpt(HS(), "0")]
                 , t1__'
                 )
               ]
    with t1__' := <clean-layout-empty-symbols(
                   | ""
                   , FALSE()
                   , FALSE()
                   )
                   ; flatten-list> [S("break;")]

  is-metaborg-java-Statement =
    ?Break()

  metaborg-java-get-indent :
    (t@Break(), index) -> indent
    where sort := <ia-get-sort> t
          ; <?"Statement"> sort
    with switch !index
           otherwise :
             indent := ""
         end

  metaborg-java-get-separator :
    (t@Break(), index) -> separator
    where sort := <ia-get-sort> t
          ; <?"Statement"> sort
    with switch !index
           otherwise :
             separator := ""
         end

  metaborg-java-get-leading-ws :
    (t@Break(), index) -> ws
    where sort := <ia-get-sort> t
          ; <?"Statement"> sort
    with switch !index
           otherwise :
             ws := ""
         end

  prettyprint-metaborg-java-Statement :
    Break(t1__) -> [ H(
                       [SOpt(HS(), "0")]
                     , t1__'
                     )
                   ]
    with t1__' := <clean-layout-empty-symbols(
                   | ""
                   , FALSE()
                   , FALSE()
                   )
                   ; flatten-list> [ S("break")
                                   , S(" ")
                                   , <check-nonterminal-isEmpty ; id
                                      <+ pp-one-Z(prettyprint-metaborg-java-Id)
                                      <+ pp-one-Z(prettyprint-completion-aux)> t1__
                                   , S(";")
                                   ]

  is-metaborg-java-Statement =
    ?Break(_)

  metaborg-java-get-indent :
    (t@Break(t1__), index) -> indent
    where sort := <ia-get-sort> t
          ; <?"Statement"> sort
    with switch !index
           case ?1 :
             indent := ""
           otherwise :
             indent := ""
         end

  metaborg-java-get-separator :
    (t@Break(t1__), index) -> separator
    where sort := <ia-get-sort> t
          ; <?"Statement"> sort
    with switch !index
           case ?1 :
             separator := ""
           otherwise :
             separator := ""
         end

  metaborg-java-get-leading-ws :
    (t@Break(t1__), index) -> ws
    where sort := <ia-get-sort> t
          ; <?"Statement"> sort
    with switch !index
           case ?1 :
             ws := " "
           otherwise :
             ws := ""
         end

  prettyprint-metaborg-java-Statement :
    Continue() -> [ H(
                      [SOpt(HS(), "0")]
                    , t1__'
                    )
                  ]
    with t1__' := <clean-layout-empty-symbols(
                   | ""
                   , FALSE()
                   , FALSE()
                   )
                   ; flatten-list> [S("continue;")]

  is-metaborg-java-Statement =
    ?Continue()

  metaborg-java-get-indent :
    (t@Continue(), index) -> indent
    where sort := <ia-get-sort> t
          ; <?"Statement"> sort
    with switch !index
           otherwise :
             indent := ""
         end

  metaborg-java-get-separator :
    (t@Continue(), index) -> separator
    where sort := <ia-get-sort> t
          ; <?"Statement"> sort
    with switch !index
           otherwise :
             separator := ""
         end

  metaborg-java-get-leading-ws :
    (t@Continue(), index) -> ws
    where sort := <ia-get-sort> t
          ; <?"Statement"> sort
    with switch !index
           otherwise :
             ws := ""
         end

  prettyprint-metaborg-java-Statement :
    Continue(t1__) -> [ H(
                          [SOpt(HS(), "0")]
                        , t1__'
                        )
                      ]
    with t1__' := <clean-layout-empty-symbols(
                   | ""
                   , FALSE()
                   , FALSE()
                   )
                   ; flatten-list> [ S("continue")
                                   , S(" ")
                                   , <check-nonterminal-isEmpty ; id
                                      <+ pp-one-Z(prettyprint-metaborg-java-Id)
                                      <+ pp-one-Z(prettyprint-completion-aux)> t1__
                                   , S(";")
                                   ]

  is-metaborg-java-Statement =
    ?Continue(_)

  metaborg-java-get-indent :
    (t@Continue(t1__), index) -> indent
    where sort := <ia-get-sort> t
          ; <?"Statement"> sort
    with switch !index
           case ?1 :
             indent := ""
           otherwise :
             indent := ""
         end

  metaborg-java-get-separator :
    (t@Continue(t1__), index) -> separator
    where sort := <ia-get-sort> t
          ; <?"Statement"> sort
    with switch !index
           case ?1 :
             separator := ""
           otherwise :
             separator := ""
         end

  metaborg-java-get-leading-ws :
    (t@Continue(t1__), index) -> ws
    where sort := <ia-get-sort> t
          ; <?"Statement"> sort
    with switch !index
           case ?1 :
             ws := " "
           otherwise :
             ws := ""
         end

  prettyprint-metaborg-java-Statement :
    Return() -> [ H(
                    [SOpt(HS(), "0")]
                  , t1__'
                  )
                ]
    with t1__' := <clean-layout-empty-symbols(
                   | ""
                   , FALSE()
                   , FALSE()
                   )
                   ; flatten-list> [S("return;")]

  is-metaborg-java-Statement =
    ?Return()

  metaborg-java-get-indent :
    (t@Return(), index) -> indent
    where sort := <ia-get-sort> t
          ; <?"Statement"> sort
    with switch !index
           otherwise :
             indent := ""
         end

  metaborg-java-get-separator :
    (t@Return(), index) -> separator
    where sort := <ia-get-sort> t
          ; <?"Statement"> sort
    with switch !index
           otherwise :
             separator := ""
         end

  metaborg-java-get-leading-ws :
    (t@Return(), index) -> ws
    where sort := <ia-get-sort> t
          ; <?"Statement"> sort
    with switch !index
           otherwise :
             ws := ""
         end

  prettyprint-metaborg-java-Statement :
    Return(t1__) -> [ H(
                        [SOpt(HS(), "0")]
                      , t1__'
                      )
                    ]
    with t1__' := <clean-layout-empty-symbols(
                   | ""
                   , FALSE()
                   , FALSE()
                   )
                   ; flatten-list> [ S("return")
                                   , S(" ")
                                   , <check-nonterminal-isEmpty ; id
                                      <+ pp-one-Z(prettyprint-metaborg-java-Expression)
                                      <+ pp-one-Z(prettyprint-completion-aux)> t1__
                                   , S(";")
                                   ]

  is-metaborg-java-Statement =
    ?Return(_)

  metaborg-java-get-indent :
    (t@Return(t1__), index) -> indent
    where sort := <ia-get-sort> t
          ; <?"Statement"> sort
    with switch !index
           case ?1 :
             indent := ""
           otherwise :
             indent := ""
         end

  metaborg-java-get-separator :
    (t@Return(t1__), index) -> separator
    where sort := <ia-get-sort> t
          ; <?"Statement"> sort
    with switch !index
           case ?1 :
             separator := ""
           otherwise :
             separator := ""
         end

  metaborg-java-get-leading-ws :
    (t@Return(t1__), index) -> ws
    where sort := <ia-get-sort> t
          ; <?"Statement"> sort
    with switch !index
           case ?1 :
             ws := " "
           otherwise :
             ws := ""
         end

  prettyprint-metaborg-java-Statement :
    Synchronized(t1__, t2__) -> [ H(
                                    [SOpt(HS(), "0")]
                                  , t1__'
                                  )
                                ]
    with t1__' := <clean-layout-empty-symbols(
                   | ""
                   , FALSE()
                   , FALSE()
                   )
                   ; flatten-list> [ S("synchronized(")
                                   , <check-nonterminal-isEmpty ; id
                                      <+ pp-one-Z(prettyprint-metaborg-java-Expression)
                                      <+ pp-one-Z(prettyprint-completion-aux)> t1__
                                   , S(")")
                                   , S(" ")
                                   , <check-nonterminal-isEmpty ; id
                                      <+ pp-one-Z(prettyprint-metaborg-java-Block)
                                      <+ pp-one-Z(prettyprint-completion-aux)> t2__
                                   ]

  is-metaborg-java-Statement =
    ?Synchronized(_, _)

  metaborg-java-get-indent :
    (t@Synchronized(t1__, t2__), index) -> indent
    where sort := <ia-get-sort> t
          ; <?"Statement"> sort
    with switch !index
           case ?1 :
             indent := ""
           case ?2 :
             indent := ""
           otherwise :
             indent := ""
         end

  metaborg-java-get-separator :
    (t@Synchronized(t1__, t2__), index) -> separator
    where sort := <ia-get-sort> t
          ; <?"Statement"> sort
    with switch !index
           case ?1 :
             separator := ""
           case ?2 :
             separator := ""
           otherwise :
             separator := ""
         end

  metaborg-java-get-leading-ws :
    (t@Synchronized(t1__, t2__), index) -> ws
    where sort := <ia-get-sort> t
          ; <?"Statement"> sort
    with switch !index
           case ?1 :
             ws := ""
           case ?2 :
             ws := " "
           otherwise :
             ws := ""
         end

  prettyprint-metaborg-java-Statement :
    Throw(t1__) -> [ H(
                       [SOpt(HS(), "0")]
                     , t1__'
                     )
                   ]
    with t1__' := <clean-layout-empty-symbols(
                   | ""
                   , FALSE()
                   , FALSE()
                   )
                   ; flatten-list> [ S("throw")
                                   , S(" ")
                                   , <check-nonterminal-isEmpty ; id
                                      <+ pp-one-Z(prettyprint-metaborg-java-Expression)
                                      <+ pp-one-Z(prettyprint-completion-aux)> t1__
                                   , S(";")
                                   ]

  is-metaborg-java-Statement =
    ?Throw(_)

  metaborg-java-get-indent :
    (t@Throw(t1__), index) -> indent
    where sort := <ia-get-sort> t
          ; <?"Statement"> sort
    with switch !index
           case ?1 :
             indent := ""
           otherwise :
             indent := ""
         end

  metaborg-java-get-separator :
    (t@Throw(t1__), index) -> separator
    where sort := <ia-get-sort> t
          ; <?"Statement"> sort
    with switch !index
           case ?1 :
             separator := ""
           otherwise :
             separator := ""
         end

  metaborg-java-get-leading-ws :
    (t@Throw(t1__), index) -> ws
    where sort := <ia-get-sort> t
          ; <?"Statement"> sort
    with switch !index
           case ?1 :
             ws := " "
           otherwise :
             ws := ""
         end

  prettyprint-metaborg-java-Statement :
    Try(t1__, t2__) -> [ H(
                           [SOpt(HS(), "0")]
                         , t1__'
                         )
                       , H(
                           [SOpt(HS(), "0")]
                         , t2__'
                         )
                       ]
    with t1__' := <clean-layout-empty-symbols(
                   | ""
                   , FALSE()
                   , FALSE()
                   )
                   ; flatten-list> [ S("try")
                                   , S(" ")
                                   , <check-nonterminal-isEmpty ; id
                                      <+ pp-one-Z(prettyprint-metaborg-java-Block)
                                      <+ pp-one-Z(prettyprint-completion-aux)> t1__
                                   ]
    with t2__' := <clean-layout-empty-symbols(
                   | ""
                   , FALSE()
                   , FALSE()
                   )
                   ; flatten-list> [ <check-nonterminal-isEmpty ; id
                                      <+ pp-V-list(prettyprint-metaborg-java-CatchClause)
                                      <+ pp-one-Z(prettyprint-completion-aux)> t2__
                                   ]

  is-metaborg-java-Statement =
    ?Try(_, _)

  metaborg-java-get-indent :
    (t@Try(t1__, t2__), index) -> indent
    where sort := <ia-get-sort> t
          ; <?"Statement"> sort
    with switch !index
           case ?1 :
             indent := ""
           case ?2 :
             indent := ""
           otherwise :
             indent := ""
         end

  metaborg-java-get-separator :
    (t@Try(t1__, t2__), index) -> separator
    where sort := <ia-get-sort> t
          ; <?"Statement"> sort
    with switch !index
           case ?1 :
             separator := ""
           case ?2 :
             separator := "\n"
           otherwise :
             separator := ""
         end

  metaborg-java-get-leading-ws :
    (t@Try(t1__, t2__), index) -> ws
    where sort := <ia-get-sort> t
          ; <?"Statement"> sort
    with switch !index
           case ?1 :
             ws := " "
           case ?2 :
             ws := "\n"
           otherwise :
             ws := ""
         end

  prettyprint-metaborg-java-Statement :
    TryFinally(t1__, t2__, t3__) -> [ H(
                                        [SOpt(HS(), "0")]
                                      , t1__'
                                      )
                                    , H(
                                        [SOpt(HS(), "0")]
                                      , t2__'
                                      )
                                    , H(
                                        [SOpt(HS(), "0")]
                                      , t3__'
                                      )
                                    ]
    with t1__' := <clean-layout-empty-symbols(
                   | ""
                   , FALSE()
                   , FALSE()
                   )
                   ; flatten-list> [ S("try")
                                   , S(" ")
                                   , <check-nonterminal-isEmpty ; id
                                      <+ pp-one-Z(prettyprint-metaborg-java-Block)
                                      <+ pp-one-Z(prettyprint-completion-aux)> t1__
                                   ]
    with t2__' := <clean-layout-empty-symbols(
                   | ""
                   , FALSE()
                   , FALSE()
                   )
                   ; flatten-list> [ <check-nonterminal-isEmpty ; id
                                      <+ pp-V-list(prettyprint-metaborg-java-CatchClause)
                                      <+ pp-one-Z(prettyprint-completion-aux)> t2__
                                   ]
    with t3__' := <clean-layout-empty-symbols(
                   | ""
                   , FALSE()
                   , FALSE()
                   )
                   ; flatten-list> [ S("finally")
                                   , S(" ")
                                   , <check-nonterminal-isEmpty ; id
                                      <+ pp-one-Z(prettyprint-metaborg-java-Block)
                                      <+ pp-one-Z(prettyprint-completion-aux)> t3__
                                   ]

  is-metaborg-java-Statement =
    ?TryFinally(_, _, _)

  metaborg-java-get-indent :
    ( t@TryFinally(t1__, t2__, t3__)
    , index
    ) -> indent
    where sort := <ia-get-sort> t
          ; <?"Statement"> sort
    with switch !index
           case ?1 :
             indent := ""
           case ?2 :
             indent := ""
           case ?3 :
             indent := ""
           otherwise :
             indent := ""
         end

  metaborg-java-get-separator :
    ( t@TryFinally(t1__, t2__, t3__)
    , index
    ) -> separator
    where sort := <ia-get-sort> t
          ; <?"Statement"> sort
    with switch !index
           case ?1 :
             separator := ""
           case ?2 :
             separator := "\n"
           case ?3 :
             separator := ""
           otherwise :
             separator := ""
         end

  metaborg-java-get-leading-ws :
    ( t@TryFinally(t1__, t2__, t3__)
    , index
    ) -> ws
    where sort := <ia-get-sort> t
          ; <?"Statement"> sort
    with switch !index
           case ?1 :
             ws := " "
           case ?2 :
             ws := "\n"
           case ?3 :
             ws := " "
           otherwise :
             ws := ""
         end

  prettyprint-metaborg-java-CatchClause :
    Catch(t1__, t2__) -> [ H(
                             [SOpt(HS(), "0")]
                           , t1__'
                           )
                         ]
    with t1__' := <clean-layout-empty-symbols(
                   | ""
                   , FALSE()
                   , FALSE()
                   )
                   ; flatten-list> [ S("catch(")
                                   , <check-nonterminal-isEmpty ; id
                                      <+ pp-one-Z(prettyprint-metaborg-java-CatchFormalParameter)
                                      <+ pp-one-Z(prettyprint-completion-aux)> t1__
                                   , S(")")
                                   , S(" ")
                                   , <check-nonterminal-isEmpty ; id
                                      <+ pp-one-Z(prettyprint-metaborg-java-Block)
                                      <+ pp-one-Z(prettyprint-completion-aux)> t2__
                                   ]

  is-metaborg-java-CatchClause =
    ?Catch(_, _)

  metaborg-java-get-indent :
    (t@Catch(t1__, t2__), index) -> indent
    where sort := <ia-get-sort> t
          ; <?"CatchClause"> sort
    with switch !index
           case ?1 :
             indent := ""
           case ?2 :
             indent := ""
           otherwise :
             indent := ""
         end

  metaborg-java-get-separator :
    (t@Catch(t1__, t2__), index) -> separator
    where sort := <ia-get-sort> t
          ; <?"CatchClause"> sort
    with switch !index
           case ?1 :
             separator := ""
           case ?2 :
             separator := ""
           otherwise :
             separator := ""
         end

  metaborg-java-get-leading-ws :
    (t@Catch(t1__, t2__), index) -> ws
    where sort := <ia-get-sort> t
          ; <?"CatchClause"> sort
    with switch !index
           case ?1 :
             ws := ""
           case ?2 :
             ws := " "
           otherwise :
             ws := ""
         end

  prettyprint-metaborg-java-CatchFormalParameter :
    CatchParam(t1__, t2__, t3__) -> [ H(
                                        [SOpt(HS(), "0")]
                                      , t1__'
                                      )
                                    ]
    with t1__' := <clean-layout-empty-symbols(
                   | ""
                   , FALSE()
                   , FALSE()
                   )
                   ; flatten-list> [ <check-nonterminal-isEmpty ; id
                                      <+ pp-H-list(prettyprint-metaborg-java-VariableModifier|" ")
                                      <+ pp-one-Z(prettyprint-completion-aux)> t1__
                                   , S(" ")
                                   , <check-nonterminal-isEmpty ; id
                                      <+ pp-one-Z(prettyprint-metaborg-java-CatchType)
                                      <+ pp-one-Z(prettyprint-completion-aux)> t2__
                                   , S(" ")
                                   , <check-nonterminal-isEmpty ; id
                                      <+ pp-one-Z(prettyprint-metaborg-java-VarDeclId)
                                      <+ pp-one-Z(prettyprint-completion-aux)> t3__
                                   ]

  is-metaborg-java-CatchFormalParameter =
    ?CatchParam(_, _, _)

  metaborg-java-get-indent :
    ( t@CatchParam(t1__, t2__, t3__)
    , index
    ) -> indent
    where sort := <ia-get-sort> t
          ; <?"CatchFormalParameter"> sort
    with switch !index
           case ?1 :
             indent := ""
           case ?2 :
             indent := ""
           case ?3 :
             indent := ""
           otherwise :
             indent := ""
         end

  metaborg-java-get-separator :
    ( t@CatchParam(t1__, t2__, t3__)
    , index
    ) -> separator
    where sort := <ia-get-sort> t
          ; <?"CatchFormalParameter"> sort
    with switch !index
           case ?1 :
             separator := " "
           case ?2 :
             separator := ""
           case ?3 :
             separator := ""
           otherwise :
             separator := ""
         end

  metaborg-java-get-leading-ws :
    ( t@CatchParam(t1__, t2__, t3__)
    , index
    ) -> ws
    where sort := <ia-get-sort> t
          ; <?"CatchFormalParameter"> sort
    with switch !index
           case ?1 :
             ws := ""
           case ?2 :
             ws := " "
           case ?3 :
             ws := " "
           otherwise :
             ws := ""
         end

  prettyprint-metaborg-java-CatchType :
    CatchType(t1__, t2__) -> [ H(
                                 [SOpt(HS(), "0")]
                               , t1__'
                               )
                             ]
    with t1__' := <clean-layout-empty-symbols(
                   | ""
                   , FALSE()
                   , FALSE()
                   )
                   ; flatten-list> [ <check-nonterminal-isEmpty ; id
                                      <+ pp-one-Z(prettyprint-metaborg-java-UnannClassType)
                                      <+ pp-one-Z(prettyprint-completion-aux)> t1__
                                   , S(" ")
                                   , <check-nonterminal-isEmpty ; id
                                      <+ pp-H-list(prettyprint-metaborg-java-CatchTypeRest|" ")
                                      <+ pp-one-Z(prettyprint-completion-aux)> t2__
                                   ]

  is-metaborg-java-CatchType =
    ?CatchType(_, _)

  metaborg-java-get-indent :
    (t@CatchType(t1__, t2__), index) -> indent
    where sort := <ia-get-sort> t
          ; <?"CatchType"> sort
    with switch !index
           case ?1 :
             indent := ""
           case ?2 :
             indent := ""
           otherwise :
             indent := ""
         end

  metaborg-java-get-separator :
    (t@CatchType(t1__, t2__), index) -> separator
    where sort := <ia-get-sort> t
          ; <?"CatchType"> sort
    with switch !index
           case ?1 :
             separator := ""
           case ?2 :
             separator := " "
           otherwise :
             separator := ""
         end

  metaborg-java-get-leading-ws :
    (t@CatchType(t1__, t2__), index) -> ws
    where sort := <ia-get-sort> t
          ; <?"CatchType"> sort
    with switch !index
           case ?1 :
             ws := ""
           case ?2 :
             ws := " "
           otherwise :
             ws := ""
         end

  prettyprint-metaborg-java-CatchTypeRest :
    CatchTypeElem(t1__) -> [ H(
                               [SOpt(HS(), "0")]
                             , t1__'
                             )
                           ]
    with t1__' := <clean-layout-empty-symbols(
                   | ""
                   , FALSE()
                   , FALSE()
                   )
                   ; flatten-list> [ S("|")
                                   , S(" ")
                                   , <check-nonterminal-isEmpty ; id
                                      <+ pp-one-Z(prettyprint-metaborg-java-ClassType)
                                      <+ pp-one-Z(prettyprint-completion-aux)> t1__
                                   ]

  is-metaborg-java-CatchTypeRest =
    ?CatchTypeElem(_)

  metaborg-java-get-indent :
    (t@CatchTypeElem(t1__), index) -> indent
    where sort := <ia-get-sort> t
          ; <?"CatchTypeRest"> sort
    with switch !index
           case ?1 :
             indent := ""
           otherwise :
             indent := ""
         end

  metaborg-java-get-separator :
    (t@CatchTypeElem(t1__), index) -> separator
    where sort := <ia-get-sort> t
          ; <?"CatchTypeRest"> sort
    with switch !index
           case ?1 :
             separator := ""
           otherwise :
             separator := ""
         end

  metaborg-java-get-leading-ws :
    (t@CatchTypeElem(t1__), index) -> ws
    where sort := <ia-get-sort> t
          ; <?"CatchTypeRest"> sort
    with switch !index
           case ?1 :
             ws := " "
           otherwise :
             ws := ""
         end

  prettyprint-metaborg-java-Statement :
    TryWithResources(t1__, t2__, t3__) -> [ H(
                                              [SOpt(HS(), "0")]
                                            , t1__'
                                            )
                                          , H(
                                              [SOpt(HS(), "0")]
                                            , t3__'
                                            )
                                          ]
    with t1__' := <clean-layout-empty-symbols(
                   | ""
                   , FALSE()
                   , FALSE()
                   )
                   ; flatten-list> [ S("try")
                                   , S(" ")
                                   , S("(")
                                   , <check-nonterminal-isEmpty ; id
                                      <+ pp-H-list(prettyprint-metaborg-java-Resource|"; ")
                                      <+ pp-one-Z(prettyprint-completion-aux)> t1__
                                   , S(")")
                                   , S(" ")
                                   , <check-nonterminal-isEmpty ; id
                                      <+ pp-one-Z(prettyprint-metaborg-java-Block)
                                      <+ pp-one-Z(prettyprint-completion-aux)> t2__
                                   ]
    with t3__' := <clean-layout-empty-symbols(
                   | ""
                   , FALSE()
                   , FALSE()
                   )
                   ; flatten-list> [ <check-nonterminal-isEmpty ; id
                                      <+ pp-V-list(prettyprint-metaborg-java-CatchClause)
                                      <+ pp-one-Z(prettyprint-completion-aux)> t3__
                                   ]

  is-metaborg-java-Statement =
    ?TryWithResources(_, _, _)

  metaborg-java-get-indent :
    ( t@TryWithResources(t1__, t2__, t3__)
    , index
    ) -> indent
    where sort := <ia-get-sort> t
          ; <?"Statement"> sort
    with switch !index
           case ?1 :
             indent := ""
           case ?2 :
             indent := ""
           case ?3 :
             indent := ""
           otherwise :
             indent := ""
         end

  metaborg-java-get-separator :
    ( t@TryWithResources(t1__, t2__, t3__)
    , index
    ) -> separator
    where sort := <ia-get-sort> t
          ; <?"Statement"> sort
    with switch !index
           case ?1 :
             separator := "; "
           case ?2 :
             separator := ""
           case ?3 :
             separator := "\n"
           otherwise :
             separator := ""
         end

  metaborg-java-get-leading-ws :
    ( t@TryWithResources(t1__, t2__, t3__)
    , index
    ) -> ws
    where sort := <ia-get-sort> t
          ; <?"Statement"> sort
    with switch !index
           case ?1 :
             ws := ""
           case ?2 :
             ws := " "
           case ?3 :
             ws := "\n"
           otherwise :
             ws := ""
         end

  prettyprint-metaborg-java-Statement :
    TryWithResourcesSemiColon(t1__, t2__, t3__) -> [ H(
                                                       [SOpt(HS(), "0")]
                                                     , t1__'
                                                     )
                                                   , H(
                                                       [SOpt(HS(), "0")]
                                                     , t3__'
                                                     )
                                                   ]
    with t1__' := <clean-layout-empty-symbols(
                   | ""
                   , FALSE()
                   , FALSE()
                   )
                   ; flatten-list> [ S("try")
                                   , S(" ")
                                   , S("(")
                                   , <check-nonterminal-isEmpty ; id
                                      <+ pp-H-list(prettyprint-metaborg-java-Resource|"; ")
                                      <+ pp-one-Z(prettyprint-completion-aux)> t1__
                                   , S(";)")
                                   , S(" ")
                                   , <check-nonterminal-isEmpty ; id
                                      <+ pp-one-Z(prettyprint-metaborg-java-Block)
                                      <+ pp-one-Z(prettyprint-completion-aux)> t2__
                                   ]
    with t3__' := <clean-layout-empty-symbols(
                   | ""
                   , FALSE()
                   , FALSE()
                   )
                   ; flatten-list> [ <check-nonterminal-isEmpty ; id
                                      <+ pp-V-list(prettyprint-metaborg-java-CatchClause)
                                      <+ pp-one-Z(prettyprint-completion-aux)> t3__
                                   ]

  is-metaborg-java-Statement =
    ?TryWithResourcesSemiColon(_, _, _)

  metaborg-java-get-indent :
    ( t@TryWithResourcesSemiColon(t1__, t2__, t3__)
    , index
    ) -> indent
    where sort := <ia-get-sort> t
          ; <?"Statement"> sort
    with switch !index
           case ?1 :
             indent := ""
           case ?2 :
             indent := ""
           case ?3 :
             indent := ""
           otherwise :
             indent := ""
         end

  metaborg-java-get-separator :
    ( t@TryWithResourcesSemiColon(t1__, t2__, t3__)
    , index
    ) -> separator
    where sort := <ia-get-sort> t
          ; <?"Statement"> sort
    with switch !index
           case ?1 :
             separator := "; "
           case ?2 :
             separator := ""
           case ?3 :
             separator := "\n"
           otherwise :
             separator := ""
         end

  metaborg-java-get-leading-ws :
    ( t@TryWithResourcesSemiColon(t1__, t2__, t3__)
    , index
    ) -> ws
    where sort := <ia-get-sort> t
          ; <?"Statement"> sort
    with switch !index
           case ?1 :
             ws := ""
           case ?2 :
             ws := " "
           case ?3 :
             ws := "\n"
           otherwise :
             ws := ""
         end

  prettyprint-metaborg-java-Statement :
    TryWithResources(t1__, t2__, t3__, t4__) -> [ H(
                                                    [SOpt(HS(), "0")]
                                                  , t1__'
                                                  )
                                                , H(
                                                    [SOpt(HS(), "0")]
                                                  , t3__'
                                                  )
                                                , H(
                                                    [SOpt(HS(), "0")]
                                                  , t4__'
                                                  )
                                                ]
    with t1__' := <clean-layout-empty-symbols(
                   | ""
                   , FALSE()
                   , FALSE()
                   )
                   ; flatten-list> [ S("try")
                                   , S(" ")
                                   , S("(")
                                   , <check-nonterminal-isEmpty ; id
                                      <+ pp-H-list(prettyprint-metaborg-java-Resource|"; ")
                                      <+ pp-one-Z(prettyprint-completion-aux)> t1__
                                   , S(")")
                                   , S(" ")
                                   , <check-nonterminal-isEmpty ; id
                                      <+ pp-one-Z(prettyprint-metaborg-java-Block)
                                      <+ pp-one-Z(prettyprint-completion-aux)> t2__
                                   ]
    with t3__' := <clean-layout-empty-symbols(
                   | ""
                   , FALSE()
                   , FALSE()
                   )
                   ; flatten-list> [ <check-nonterminal-isEmpty ; id
                                      <+ pp-V-list(prettyprint-metaborg-java-CatchClause)
                                      <+ pp-one-Z(prettyprint-completion-aux)> t3__
                                   ]
    with t4__' := <clean-layout-empty-symbols(
                   | ""
                   , FALSE()
                   , FALSE()
                   )
                   ; flatten-list> [ S("finally")
                                   , S(" ")
                                   , <check-nonterminal-isEmpty ; id
                                      <+ pp-one-Z(prettyprint-metaborg-java-Block)
                                      <+ pp-one-Z(prettyprint-completion-aux)> t4__
                                   ]

  is-metaborg-java-Statement =
    ?TryWithResources(_, _, _, _)

  metaborg-java-get-indent :
    ( t@TryWithResources(t1__, t2__, t3__, t4__)
    , index
    ) -> indent
    where sort := <ia-get-sort> t
          ; <?"Statement"> sort
    with switch !index
           case ?1 :
             indent := ""
           case ?2 :
             indent := ""
           case ?3 :
             indent := ""
           case ?4 :
             indent := ""
           otherwise :
             indent := ""
         end

  metaborg-java-get-separator :
    ( t@TryWithResources(t1__, t2__, t3__, t4__)
    , index
    ) -> separator
    where sort := <ia-get-sort> t
          ; <?"Statement"> sort
    with switch !index
           case ?1 :
             separator := "; "
           case ?2 :
             separator := ""
           case ?3 :
             separator := "\n"
           case ?4 :
             separator := ""
           otherwise :
             separator := ""
         end

  metaborg-java-get-leading-ws :
    ( t@TryWithResources(t1__, t2__, t3__, t4__)
    , index
    ) -> ws
    where sort := <ia-get-sort> t
          ; <?"Statement"> sort
    with switch !index
           case ?1 :
             ws := ""
           case ?2 :
             ws := " "
           case ?3 :
             ws := "\n"
           case ?4 :
             ws := " "
           otherwise :
             ws := ""
         end

  prettyprint-metaborg-java-Statement :
    TryWithResourcesSemiColon(t1__, t2__, t3__, t4__) -> [ H(
                                                             [SOpt(HS(), "0")]
                                                           , t1__'
                                                           )
                                                         , H(
                                                             [SOpt(HS(), "0")]
                                                           , t3__'
                                                           )
                                                         , H(
                                                             [SOpt(HS(), "0")]
                                                           , t4__'
                                                           )
                                                         ]
    with t1__' := <clean-layout-empty-symbols(
                   | ""
                   , FALSE()
                   , FALSE()
                   )
                   ; flatten-list> [ S("try")
                                   , S(" ")
                                   , S("(")
                                   , <check-nonterminal-isEmpty ; id
                                      <+ pp-H-list(prettyprint-metaborg-java-Resource|"; ")
                                      <+ pp-one-Z(prettyprint-completion-aux)> t1__
                                   , S(";)")
                                   , S(" ")
                                   , <check-nonterminal-isEmpty ; id
                                      <+ pp-one-Z(prettyprint-metaborg-java-Block)
                                      <+ pp-one-Z(prettyprint-completion-aux)> t2__
                                   ]
    with t3__' := <clean-layout-empty-symbols(
                   | ""
                   , FALSE()
                   , FALSE()
                   )
                   ; flatten-list> [ <check-nonterminal-isEmpty ; id
                                      <+ pp-V-list(prettyprint-metaborg-java-CatchClause)
                                      <+ pp-one-Z(prettyprint-completion-aux)> t3__
                                   ]
    with t4__' := <clean-layout-empty-symbols(
                   | ""
                   , FALSE()
                   , FALSE()
                   )
                   ; flatten-list> [ S("finally")
                                   , S(" ")
                                   , <check-nonterminal-isEmpty ; id
                                      <+ pp-one-Z(prettyprint-metaborg-java-Block)
                                      <+ pp-one-Z(prettyprint-completion-aux)> t4__
                                   ]

  is-metaborg-java-Statement =
    ?TryWithResourcesSemiColon(_, _, _, _)

  metaborg-java-get-indent :
    ( t@TryWithResourcesSemiColon(t1__, t2__, t3__, t4__)
    , index
    ) -> indent
    where sort := <ia-get-sort> t
          ; <?"Statement"> sort
    with switch !index
           case ?1 :
             indent := ""
           case ?2 :
             indent := ""
           case ?3 :
             indent := ""
           case ?4 :
             indent := ""
           otherwise :
             indent := ""
         end

  metaborg-java-get-separator :
    ( t@TryWithResourcesSemiColon(t1__, t2__, t3__, t4__)
    , index
    ) -> separator
    where sort := <ia-get-sort> t
          ; <?"Statement"> sort
    with switch !index
           case ?1 :
             separator := "; "
           case ?2 :
             separator := ""
           case ?3 :
             separator := "\n"
           case ?4 :
             separator := ""
           otherwise :
             separator := ""
         end

  metaborg-java-get-leading-ws :
    ( t@TryWithResourcesSemiColon(t1__, t2__, t3__, t4__)
    , index
    ) -> ws
    where sort := <ia-get-sort> t
          ; <?"Statement"> sort
    with switch !index
           case ?1 :
             ws := ""
           case ?2 :
             ws := " "
           case ?3 :
             ws := "\n"
           case ?4 :
             ws := " "
           otherwise :
             ws := ""
         end

  prettyprint-metaborg-java-Resource :
    Resource(t1__, t2__, t3__, t4__) -> [ H(
                                            [SOpt(HS(), "0")]
                                          , t1__'
                                          )
                                        ]
    with t1__' := <clean-layout-empty-symbols(
                   | ""
                   , FALSE()
                   , FALSE()
                   )
                   ; flatten-list> [ <check-nonterminal-isEmpty ; id
                                      <+ pp-H-list(prettyprint-metaborg-java-VariableModifier|" ")
                                      <+ pp-one-Z(prettyprint-completion-aux)> t1__
                                   , S(" ")
                                   , <check-nonterminal-isEmpty ; id
                                      <+ pp-one-Z(prettyprint-metaborg-java-UnannType)
                                      <+ pp-one-Z(prettyprint-completion-aux)> t2__
                                   , S(" ")
                                   , <check-nonterminal-isEmpty ; id
                                      <+ pp-one-Z(prettyprint-metaborg-java-VarDeclId)
                                      <+ pp-one-Z(prettyprint-completion-aux)> t3__
                                   , S(" ")
                                   , S("=")
                                   , S(" ")
                                   , <check-nonterminal-isEmpty ; id
                                      <+ pp-one-Z(prettyprint-metaborg-java-Expression)
                                      <+ pp-one-Z(prettyprint-completion-aux)> t4__
                                   ]

  is-metaborg-java-Resource =
    ?Resource(_, _, _, _)

  metaborg-java-get-indent :
    ( t@Resource(t1__, t2__, t3__, t4__)
    , index
    ) -> indent
    where sort := <ia-get-sort> t
          ; <?"Resource"> sort
    with switch !index
           case ?1 :
             indent := ""
           case ?2 :
             indent := ""
           case ?3 :
             indent := ""
           case ?4 :
             indent := ""
           otherwise :
             indent := ""
         end

  metaborg-java-get-separator :
    ( t@Resource(t1__, t2__, t3__, t4__)
    , index
    ) -> separator
    where sort := <ia-get-sort> t
          ; <?"Resource"> sort
    with switch !index
           case ?1 :
             separator := " "
           case ?2 :
             separator := ""
           case ?3 :
             separator := ""
           case ?4 :
             separator := ""
           otherwise :
             separator := ""
         end

  metaborg-java-get-leading-ws :
    ( t@Resource(t1__, t2__, t3__, t4__)
    , index
    ) -> ws
    where sort := <ia-get-sort> t
          ; <?"Resource"> sort
    with switch !index
           case ?1 :
             ws := ""
           case ?2 :
             ws := " "
           case ?3 :
             ws := " "
           case ?4 :
             ws := " "
           otherwise :
             ws := ""
         end

  is-metaborg-java-ForInit =
    fail

  is-metaborg-java-ForUpdate =
    fail

  is-metaborg-java-SwitchGroup =
    fail

  is-metaborg-java-SwitchLabel =
    fail

  is-metaborg-java-CatchClause =
    fail

  is-metaborg-java-CatchFormalParameter =
    fail

  is-metaborg-java-CatchType =
    fail

  is-metaborg-java-CatchTypeRest =
    fail

  is-metaborg-java-Statement =
    fail

  is-metaborg-java-Resource =
    fail

  prettyprint-metaborg-java-ForInit :
    amb([h|hs]) -> <prettyprint-metaborg-java-ForInit> h

  prettyprint-metaborg-java-ForUpdate :
    amb([h|hs]) -> <prettyprint-metaborg-java-ForUpdate> h

  prettyprint-metaborg-java-SwitchGroup :
    amb([h|hs]) -> <prettyprint-metaborg-java-SwitchGroup> h

  prettyprint-metaborg-java-SwitchLabel :
    amb([h|hs]) -> <prettyprint-metaborg-java-SwitchLabel> h

  prettyprint-metaborg-java-CatchClause :
    amb([h|hs]) -> <prettyprint-metaborg-java-CatchClause> h

  prettyprint-metaborg-java-CatchFormalParameter :
    amb([h|hs]) -> <prettyprint-metaborg-java-CatchFormalParameter> h

  prettyprint-metaborg-java-CatchType :
    amb([h|hs]) -> <prettyprint-metaborg-java-CatchType> h

  prettyprint-metaborg-java-CatchTypeRest :
    amb([h|hs]) -> <prettyprint-metaborg-java-CatchTypeRest> h

  prettyprint-metaborg-java-Statement :
    amb([h|hs]) -> <prettyprint-metaborg-java-Statement> h

  prettyprint-metaborg-java-Resource :
    amb([h|hs]) -> <prettyprint-metaborg-java-Resource> h

  prettyprint-metaborg-java-ForInit :
    ForInit-Plhdr() -> [ H(
                           [SOpt(HS(), "0")]
                         , [S("$ForInit")]
                         )
                       ]

  is-metaborg-java-ForInit =
    ?ForInit-Plhdr()

  prettyprint-metaborg-java-VarDecl :
    VarDecl-Plhdr() -> [ H(
                           [SOpt(HS(), "0")]
                         , [S("$VarDecl")]
                         )
                       ]

  is-metaborg-java-VarDecl =
    ?VarDecl-Plhdr()

  prettyprint-metaborg-java-ForUpdate :
    ForUpdate-Plhdr() -> [ H(
                             [SOpt(HS(), "0")]
                           , [S("$ForUpdate")]
                           )
                         ]

  is-metaborg-java-ForUpdate =
    ?ForUpdate-Plhdr()

  prettyprint-metaborg-java-ExpressionName :
    ExpressionName-Plhdr() -> [ H(
                                  [SOpt(HS(), "0")]
                                , [S("$ExpressionName")]
                                )
                              ]

  is-metaborg-java-ExpressionName =
    ?ExpressionName-Plhdr()

  prettyprint-metaborg-java-SwitchGroup :
    SwitchGroup-Plhdr() -> [ H(
                               [SOpt(HS(), "0")]
                             , [S("$SwitchGroup")]
                             )
                           ]

  is-metaborg-java-SwitchGroup =
    ?SwitchGroup-Plhdr()

  prettyprint-metaborg-java-BlockStatement :
    BlockStatement-Plhdr() -> [ H(
                                  [SOpt(HS(), "0")]
                                , [S("$BlockStatement")]
                                )
                              ]

  is-metaborg-java-BlockStatement =
    ?BlockStatement-Plhdr()

  prettyprint-metaborg-java-SwitchLabel :
    SwitchLabel-Plhdr() -> [ H(
                               [SOpt(HS(), "0")]
                             , [S("$SwitchLabel")]
                             )
                           ]

  is-metaborg-java-SwitchLabel =
    ?SwitchLabel-Plhdr()

  prettyprint-metaborg-java-Id :
    Id-Plhdr() -> [ H(
                      [SOpt(HS(), "0")]
                    , [S("$Id")]
                    )
                  ]

  is-metaborg-java-Id =
    ?Id-Plhdr()

  prettyprint-metaborg-java-CatchFormalParameter :
    CatchFormalParameter-Plhdr() -> [ H(
                                        [SOpt(HS(), "0")]
                                      , [S("$CatchFormalParameter")]
                                      )
                                    ]

  is-metaborg-java-CatchFormalParameter =
    ?CatchFormalParameter-Plhdr()

  prettyprint-metaborg-java-CatchType :
    CatchType-Plhdr() -> [ H(
                             [SOpt(HS(), "0")]
                           , [S("$CatchType")]
                           )
                         ]

  is-metaborg-java-CatchType =
    ?CatchType-Plhdr()

  prettyprint-metaborg-java-UnannClassType :
    UnannClassType-Plhdr() -> [ H(
                                  [SOpt(HS(), "0")]
                                , [S("$UnannClassType")]
                                )
                              ]

  is-metaborg-java-UnannClassType =
    ?UnannClassType-Plhdr()

  prettyprint-metaborg-java-CatchTypeRest :
    CatchTypeRest-Plhdr() -> [ H(
                                 [SOpt(HS(), "0")]
                               , [S("$CatchTypeRest")]
                               )
                             ]

  is-metaborg-java-CatchTypeRest =
    ?CatchTypeRest-Plhdr()

  prettyprint-metaborg-java-ClassType :
    ClassType-Plhdr() -> [ H(
                             [SOpt(HS(), "0")]
                           , [S("$ClassType")]
                           )
                         ]

  is-metaborg-java-ClassType =
    ?ClassType-Plhdr()

  prettyprint-metaborg-java-Statement :
    Statement-Plhdr() -> [ H(
                             [SOpt(HS(), "0")]
                           , [S("$Statement")]
                           )
                         ]

  is-metaborg-java-Statement =
    ?Statement-Plhdr()

  prettyprint-metaborg-java-CatchClause :
    CatchClause-Plhdr() -> [ H(
                               [SOpt(HS(), "0")]
                             , [S("$CatchClause")]
                             )
                           ]

  is-metaborg-java-CatchClause =
    ?CatchClause-Plhdr()

  prettyprint-metaborg-java-Block :
    Block-Plhdr() -> [ H(
                         [SOpt(HS(), "0")]
                       , [S("$Block")]
                       )
                     ]

  is-metaborg-java-Block =
    ?Block-Plhdr()

  prettyprint-metaborg-java-Resource :
    Resource-Plhdr() -> [ H(
                            [SOpt(HS(), "0")]
                          , [S("$Resource")]
                          )
                        ]

  is-metaborg-java-Resource =
    ?Resource-Plhdr()

  prettyprint-metaborg-java-VariableModifier :
    VariableModifier-Plhdr() -> [ H(
                                    [SOpt(HS(), "0")]
                                  , [S("$VariableModifier")]
                                  )
                                ]

  is-metaborg-java-VariableModifier =
    ?VariableModifier-Plhdr()

  prettyprint-metaborg-java-UnannType :
    UnannType-Plhdr() -> [ H(
                             [SOpt(HS(), "0")]
                           , [S("$UnannType")]
                           )
                         ]

  is-metaborg-java-UnannType =
    ?UnannType-Plhdr()

  prettyprint-metaborg-java-VarDeclId :
    VarDeclId-Plhdr() -> [ H(
                             [SOpt(HS(), "0")]
                           , [S("$VarDeclId")]
                           )
                         ]

  is-metaborg-java-VarDeclId =
    ?VarDeclId-Plhdr()

  prettyprint-metaborg-java-Expression :
    Expression-Plhdr() -> [ H(
                              [SOpt(HS(), "0")]
                            , [S("$Expression")]
                            )
                          ]

  is-metaborg-java-Expression =
    ?Expression-Plhdr()

  prettyprint-metaborg-java-ForInit :
    ForInit-Plhdr(_) -> [ H(
                            [SOpt(HS(), "0")]
                          , [S("$ForInit")]
                          )
                        ]

  is-metaborg-java-ForInit =
    ?ForInit-Plhdr(_)

  prettyprint-metaborg-java-VarDecl :
    VarDecl-Plhdr(_) -> [ H(
                            [SOpt(HS(), "0")]
                          , [S("$VarDecl")]
                          )
                        ]

  is-metaborg-java-VarDecl =
    ?VarDecl-Plhdr(_)

  prettyprint-metaborg-java-ForUpdate :
    ForUpdate-Plhdr(_) -> [ H(
                              [SOpt(HS(), "0")]
                            , [S("$ForUpdate")]
                            )
                          ]

  is-metaborg-java-ForUpdate =
    ?ForUpdate-Plhdr(_)

  prettyprint-metaborg-java-ExpressionName :
    ExpressionName-Plhdr(_) -> [ H(
                                   [SOpt(HS(), "0")]
                                 , [S("$ExpressionName")]
                                 )
                               ]

  is-metaborg-java-ExpressionName =
    ?ExpressionName-Plhdr(_)

  prettyprint-metaborg-java-SwitchGroup :
    SwitchGroup-Plhdr(_) -> [ H(
                                [SOpt(HS(), "0")]
                              , [S("$SwitchGroup")]
                              )
                            ]

  is-metaborg-java-SwitchGroup =
    ?SwitchGroup-Plhdr(_)

  prettyprint-metaborg-java-BlockStatement :
    BlockStatement-Plhdr(_) -> [ H(
                                   [SOpt(HS(), "0")]
                                 , [S("$BlockStatement")]
                                 )
                               ]

  is-metaborg-java-BlockStatement =
    ?BlockStatement-Plhdr(_)

  prettyprint-metaborg-java-SwitchLabel :
    SwitchLabel-Plhdr(_) -> [ H(
                                [SOpt(HS(), "0")]
                              , [S("$SwitchLabel")]
                              )
                            ]

  is-metaborg-java-SwitchLabel =
    ?SwitchLabel-Plhdr(_)

  prettyprint-metaborg-java-Id :
    Id-Plhdr(_) -> [ H(
                       [SOpt(HS(), "0")]
                     , [S("$Id")]
                     )
                   ]

  is-metaborg-java-Id =
    ?Id-Plhdr(_)

  prettyprint-metaborg-java-CatchFormalParameter :
    CatchFormalParameter-Plhdr(_) -> [ H(
                                         [SOpt(HS(), "0")]
                                       , [S("$CatchFormalParameter")]
                                       )
                                     ]

  is-metaborg-java-CatchFormalParameter =
    ?CatchFormalParameter-Plhdr(_)

  prettyprint-metaborg-java-CatchType :
    CatchType-Plhdr(_) -> [ H(
                              [SOpt(HS(), "0")]
                            , [S("$CatchType")]
                            )
                          ]

  is-metaborg-java-CatchType =
    ?CatchType-Plhdr(_)

  prettyprint-metaborg-java-UnannClassType :
    UnannClassType-Plhdr(_) -> [ H(
                                   [SOpt(HS(), "0")]
                                 , [S("$UnannClassType")]
                                 )
                               ]

  is-metaborg-java-UnannClassType =
    ?UnannClassType-Plhdr(_)

  prettyprint-metaborg-java-CatchTypeRest :
    CatchTypeRest-Plhdr(_) -> [ H(
                                  [SOpt(HS(), "0")]
                                , [S("$CatchTypeRest")]
                                )
                              ]

  is-metaborg-java-CatchTypeRest =
    ?CatchTypeRest-Plhdr(_)

  prettyprint-metaborg-java-ClassType :
    ClassType-Plhdr(_) -> [ H(
                              [SOpt(HS(), "0")]
                            , [S("$ClassType")]
                            )
                          ]

  is-metaborg-java-ClassType =
    ?ClassType-Plhdr(_)

  prettyprint-metaborg-java-Statement :
    Statement-Plhdr(_) -> [ H(
                              [SOpt(HS(), "0")]
                            , [S("$Statement")]
                            )
                          ]

  is-metaborg-java-Statement =
    ?Statement-Plhdr(_)

  prettyprint-metaborg-java-CatchClause :
    CatchClause-Plhdr(_) -> [ H(
                                [SOpt(HS(), "0")]
                              , [S("$CatchClause")]
                              )
                            ]

  is-metaborg-java-CatchClause =
    ?CatchClause-Plhdr(_)

  prettyprint-metaborg-java-Block :
    Block-Plhdr(_) -> [ H(
                          [SOpt(HS(), "0")]
                        , [S("$Block")]
                        )
                      ]

  is-metaborg-java-Block =
    ?Block-Plhdr(_)

  prettyprint-metaborg-java-Resource :
    Resource-Plhdr(_) -> [ H(
                             [SOpt(HS(), "0")]
                           , [S("$Resource")]
                           )
                         ]

  is-metaborg-java-Resource =
    ?Resource-Plhdr(_)

  prettyprint-metaborg-java-VariableModifier :
    VariableModifier-Plhdr(_) -> [ H(
                                     [SOpt(HS(), "0")]
                                   , [S("$VariableModifier")]
                                   )
                                 ]

  is-metaborg-java-VariableModifier =
    ?VariableModifier-Plhdr(_)

  prettyprint-metaborg-java-UnannType :
    UnannType-Plhdr(_) -> [ H(
                              [SOpt(HS(), "0")]
                            , [S("$UnannType")]
                            )
                          ]

  is-metaborg-java-UnannType =
    ?UnannType-Plhdr(_)

  prettyprint-metaborg-java-VarDeclId :
    VarDeclId-Plhdr(_) -> [ H(
                              [SOpt(HS(), "0")]
                            , [S("$VarDeclId")]
                            )
                          ]

  is-metaborg-java-VarDeclId =
    ?VarDeclId-Plhdr(_)

  prettyprint-metaborg-java-Expression :
    Expression-Plhdr(_) -> [ H(
                               [SOpt(HS(), "0")]
                             , [S("$Expression")]
                             )
                           ]

  is-metaborg-java-Expression =
    ?Expression-Plhdr(_)

  prettyprint-metaborg-java-Expression :
    Expression-Opt-Plhdr() -> [ H(
                                  []
                                , [S("")]
                                )
                              ]

  is-metaborg-java-Expression =
    ?Expression-Opt-Plhdr()

  prettyprint-metaborg-java-SwitchGroup :
    SwitchGroup-Opt-Plhdr() -> [ H(
                                   []
                                 , [S("")]
                                 )
                               ]

  is-metaborg-java-SwitchGroup =
    ?SwitchGroup-Opt-Plhdr()

  prettyprint-metaborg-java-SwitchLabel :
    SwitchLabel-Opt-Plhdr() -> [ H(
                                   []
                                 , [S("")]
                                 )
                               ]

  is-metaborg-java-SwitchLabel =
    ?SwitchLabel-Opt-Plhdr()

  prettyprint-metaborg-java-CatchTypeRest :
    CatchTypeRest-Opt-Plhdr() -> [ H(
                                     []
                                   , [S("")]
                                   )
                                 ]

  is-metaborg-java-CatchTypeRest =
    ?CatchTypeRest-Opt-Plhdr()

  prettyprint-metaborg-java-Resource :
    Resource-Opt-Plhdr() -> [ H(
                                []
                              , [S("")]
                              )
                            ]

  is-metaborg-java-Resource =
    ?Resource-Opt-Plhdr()

  prettyprint-metaborg-java-CatchClause :
    CatchClause-Opt-Plhdr() -> [ H(
                                   []
                                 , [S("")]
                                 )
                               ]

  is-metaborg-java-CatchClause =
    ?CatchClause-Opt-Plhdr()

  prettyprint-metaborg-java-VariableModifier :
    VariableModifier-Opt-Plhdr() -> [ H(
                                        []
                                      , [S("")]
                                      )
                                    ]

  is-metaborg-java-VariableModifier =
    ?VariableModifier-Opt-Plhdr()